$begin wish_list$$
$spell
	pde
	Retaping
	Bootstrap
	retape
	csv
	covariate
	Covariates
	sfun
	hpp
	Dismod
	dismoditis
	src
	cpp
	struct
	py
$$

$section Wish List For Improvements to dismod_pde$$
$index wish, list$$
$index list, which$$

$head Continuing Fitting$$
It would be good to write out a version of the
$cref/sfun_in.csv/dismod_pde_csv/sfun_in.csv/$$ that could be used to start
fitting (optimization) where a previous fitting stopped.

$head Objective and Constraint Retaping$$
Error detection and reporting can be improved by having the object
and constraint functions retape for every evaluation (which is much slower).
Perhaps we should add an option so the user can turn this on and perhaps
get better error reporting.

$head Lower Age Limit$$
$index lower, age limit$$
$index age_lower$$
$index limit, age_lower$$
Each $cref/age_lower/dismod_pde_csv/measure_in.csv/age_lower, age_upper/$$
value must be greater than zero. 
It would be nice it could equal zero.

$head Measurement Model Integral$$
$index measurement, model$$
$index measurement, integral$$
$index model, measurement$$
$index integral, measurement$$
$index approximation, integral$$
$index integrand$$
Currently a mid-point approximation is used to model the measurement values.
measurement measurements with large age and time spans, this may not be accurate
and perhaps we should use some other method.

$head Estimator Standard Deviation$$
$index estimate, standard deviation$$
$index accuracy, of estimate$$
$index standard deviation, estimate$$
$index variance, estimate$$

$list number$$
Standard maximum likelihood theory could be used to approximate the
diagonal of the covariance of the estimate for the
$cref/stochastic functions/optimize/Stochastic Functions/$$.
Note that the diagonal of the covariance is the auto covariance for
each stochastic function estimate at each age and time grid point.

$lnext
Bootstrap methods could also be used to determine statistical
properties for the estimates.
$lend

$head Information Matrix$$
$index information, matrix$$
$index posterior, distribution$$
$index matrix, information$$
$index distribution, posterior$$
The information matrix (inverse of the covariance matrix) is useful
if one wants to use the results of dismod_pde to create a posterior distribution
for the stochastic functions (to use in some other estimation procedure).
The number of entries in the information matrix is 
the square of the number of age-cohort grid points (which can be huge).
Fortunately, the information matrix is sparse and it would be feasible
output some representation for it.

$head Example$$
$head examples$$

$list number$$
The $code constant.sh$$, $code bilinear.sh$$ 
tests (in the $code test$$ directory) could be made into
examples by adding documentation.

$lnext
Convert the $cref dismoditis.sh$$ documentation to be like 
$cref d4_simulate.py$$; i.e., specifications instead of entire 
implementation.
$lend

$head Covariates$$
$index covariates$$

$list number$$
Allow for prior distributions (besides uniform) for the
covariate multiplier vector $latex \beta$$.

$lnext
Allow for a discrete covariate with a different multiplier for
each value that the covariate assumes.

$lnext
Integrate with respect to the  stochastic function when estimating
the covariate multipliers.

$lnext
Allow for the covariate multipliers to include fixed and random effects.

$lend

$head External Packages$$
Create instructions for installing the 
$cref/external packages/install/External Packages/$$ 
that could be used when the automated install failed.
(The automated install only supports the Gnu compiler and has other
simplifications that are not necessary.)

$head  Import Dismod3 Data$$
There is a prototype program that converts 
$href%/http://winthrop.ihme.washington.edu/public/intro.html%Dismod3%$$
data files to dismod_pde format. 
Perhaps this should be turned into a supported application.

$end
