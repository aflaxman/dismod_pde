<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Optimization of dismod_pde Objective Function</title>
<meta name="description" id="description" content="Optimization of dismod_pde Objective Function"/>
<meta name="keywords" id="keywords" content=" Stochastic_enum Likelihood_enum G value covariate X "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_optimize_xml.js'>
</script>
</head>
<body>
<table><tr>
<td><a href="cpp.xml" target="_top">Prev</a>
</td><td><a href="ipopt_trace.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>dismod_pde</option>
<option>cpp</option>
<option>optimize</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>dismod_pde-&gt;</option>
<option>whats_new</option>
<option>install</option>
<option>csv</option>
<option>cpp</option>
<option>example</option>
<option>wish_list</option>
<option>bug_list</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>cpp-&gt;</option>
<option>optimize</option>
<option>create_grid</option>
<option>pair2index</option>
<option>csv_read</option>
<option>str_char_vec</option>
<option>atof_char_vec</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>optimize-&gt;</option>
<option>ipopt_trace</option>
<option>optimize_xam.cpp</option>
<option>dismoditis.cpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Stochastic Functions</option>
<option>Stochastic_Enum</option>
<option>Plus Infinity</option>
<option>Not a Number</option>
<option>Likelihood Functions</option>
<option>---..Huber Loss Function</option>
<option>---..Likelihood_Enum</option>
<option>---..Residual Function</option>
<option>Vector</option>
<option>parameter</option>
<option>---..max_ode_step</option>
<option>---..print_level</option>
<option>---..max_iteration</option>
<option>---..converge_tolerance</option>
<option>---..debug_output</option>
<option>grid</option>
<option>---..G</option>
<option>---..age</option>
<option>---..cohort</option>
<option>---..time_lower</option>
<option>---..time_upper</option>
<option>sfun_in</option>
<option>---..optimize_zeta</option>
<option>---..optimize_lower</option>
<option>---..optimize_initial</option>
<option>---..optimize_upper</option>
<option>---..prior_like</option>
<option>---..prior_zeta</option>
<option>---..prior_sigma</option>
<option>---..prior_mean</option>
<option>---..age_like</option>
<option>---..age_zeta</option>
<option>---..age_sigma</option>
<option>---..age_order</option>
<option>---..cohort_like</option>
<option>---..cohort_zeta</option>
<option>---..cohort_sigma</option>
<option>---..cohort_order</option>
<option>---..cross_like</option>
<option>---..cross_zeta</option>
<option>---..cross_sigma</option>
<option>covariate_value</option>
<option>measure_in</option>
<option>---..integrand</option>
<option>---..Integrand_Enum</option>
<option>---..age_lower, age_upper</option>
<option>---..time_lower, time_upper</option>
<option>---..meas_like</option>
<option>---..meas_zeta</option>
<option>---..meas_sigma</option>
<option>---..meas_value</option>
<option>effect_in</option>
<option>---..integrand</option>
<option>---..covariate</option>
<option>---..lower</option>
<option>---..initial</option>
<option>---..upper</option>
<option>effect_out</option>
<option>sfun_out</option>
<option>---..estimate</option>
<option>---..prior_residual</option>
<option>---..prior_scaled</option>
<option>---..age_residual</option>
<option>---..age_scaled</option>
<option>---..cohort_residual</option>
<option>---..cohort_scaled</option>
<option>---..cross_residual</option>
<option>---..cross_scaled</option>
<option>measure_out</option>
<option>---..adjusted</option>
<option>---..model</option>
<option>---..residual</option>
<option>---..scaled</option>
<option>message</option>
<option>MAP Optimization</option>
<option>---..Objective</option>
<option>---..Problem</option>
<option>Example</option>
</select>
</td>
</tr></table><br/>
<center><b><big><big>Optimization of dismod_pde Objective Function</big></big></b></center>
<br/>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br/>

<code><font color="blue"><span style='white-space: nowrap'>#&#xA0;include&#xA0;&quot;optimize.hpp&quot;<br/>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>message</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;dismod_pde::optimize(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>parameter</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>covariate_value</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_out</span></font></i><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>effect_in</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>effect_out</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
)</span></font></code>


<br/>
<br/>
<b><big><a name="Stochastic Functions" id="Stochastic Functions">Stochastic Functions</a></big></b>
<br/>
dismod_pde estimates the following stochastic functions of age and cohort:
<table><tr><td align='left'  valign='top'>

<b>Name</b> </td><td align='left'  valign='top'>
 
	<b>Description</b> 
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">Stochastic_Enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
</mrow></math>


</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>S</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

 </td><td align='left'  valign='top'>

	fraction of cohort that are Susceptible to the condition
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">dismod_pde::S_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> 0
</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>C</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

 </td><td align='left'  valign='top'>

	fraction of cohort that have the Condition
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">dismod_pde::C_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> 1
</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003B9;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

 </td><td align='left'  valign='top'>

	Incidence rate at which condition occurs
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">dismod_pde::iota_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> 2
</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003C1;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

 </td><td align='left'  valign='top'>

	Remission rate at which condition is cured
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">dismod_pde::rho_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> 3
</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003C7;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

 </td><td align='left'  valign='top'>

	eXcess mortality rate at which people die from the condition
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">dismod_pde::chi_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> 4
</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003C9;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

 </td><td align='left'  valign='top'>

	Mortality rate at which people die from other causes
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">dismod_pde::omega_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> 5
</td></tr>
</table>
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mn>5</mn>
</mrow></math>

,
we also use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>q</mi>
</msup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>c</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 for the stochastic functions above; e.g.,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>s</mi>
<mn>3</mn>
</msup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>c</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='normal'>&#x003C1;</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>c</mi>
<mo stretchy="false">)</mo>
</mrow></math>

.
Note that the 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
</mrow></math>

 values corresponding to the different functions
may change in future versions of <code><font color="blue">dismod_pde::optimize</font></code>.
Hence it is better to use the <code><font color="blue">Stochastic_Enum</font></code> values for the
stochastic function indices.

<br/>
<br/>
<b><big><a name="Stochastic_Enum" id="Stochastic_Enum">Stochastic_Enum</a></big></b>


<code><font color="blue"><br/>
dismod_pde::Stochastic_Enum</font></code> is an <code><font color="blue">enum</font></code>
type with the values listed above.
Sometimes the corresponding integer value 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
</mrow></math>

 is used to denote a 
stochastic function in the documentation below.
The vector

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::vector&lt;std::string&gt;&#xA0;dismod_pde::stochastic_enum.name()<br/>
</span></font></code>
can be used to map from the indices 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
</mrow></math>

 to the corresponding string; 
e.g., 

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;dismod_pde::stochastic_enum.name()[&#xA0;dismod_pde::rho_enum&#xA0;]&#xA0;==&#xA0;&quot;rho&quot;<br/>
</span></font></code>
Here and below we use the notation 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>Q</mi>
</mrow></math>

 for the number
of stochastic functions; i.e.,

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;dismod_pde::n_stochastic_enum<br/>
</span></font></code>
<br/>
<b><big><a name="Plus Infinity" id="Plus Infinity">Plus Infinity</a></big></b>
<br/>
We use the notation 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">+</mo>
<mo stretchy="false">&#x0221E;</mo>
</mrow></math>

 for the value

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>infinity</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;DISMOD4_PLUS_INFINITY<br/>
</span></font></code>
where <code><font color="blue">DISMOD4_PLUS_INFINITY</font></code> is defined by
<code><font color="blue">optimize.hpp</font></code>.


<br/>
<br/>
<b><big><a name="Not a Number" id="Not a Number">Not a Number</a></big></b>
<br/>
We use the notation 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>nan</mi>
</mstyle></mrow>
</mrow></math>

 for the value

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>nan</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;dismod_pde::nan()<br/>
</span></font></code>
where <code><font color="blue">dismod_pde::nan()</font></code> is defined by
<code><font color="blue">optimize.hpp</font></code>.
For a <code><font color="blue">double </font></code> value 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
,
one should use the function

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;dismod_pde::isnan(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>
to determine if 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 is not a number.


<br/>
<br/>
<b><big><a name="Likelihood Functions" id="Likelihood Functions">Likelihood Functions</a></big></b>


<br/>
<br/>
<b><a name="Likelihood Functions.Huber Loss Function" id="Likelihood Functions.Huber Loss Function">Huber Loss Function</a></b>
<br/>
The Laplace 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>H</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">,</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
</mrow></math>

 and Gaussian 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>H</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">,</mo>
<mn>2</mn>
<mo stretchy="false">)</mo>
</mrow></math>

 
Huber loss functions are defined as follows:

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mi mathvariant='italic'>H</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">,</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mrow><mo stretchy="true">{</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="left" >
<mn>0</mn>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>if</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">=</mo>
<mo stretchy="false">&#x0221E;</mo>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>or</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>or</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>isnan</mi>
</mstyle></mrow>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">)</mo>
</mtd></mtr><mtr><mtd columnalign="left" >
<mo stretchy="false">&#x0221E;</mo>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>otherwise</mi>
<mspace width='.3em'/>
<mi mathvariant='normal'>if</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
</mtd></mtr><mtr><mtd columnalign="left" >
<msqrt><mrow><mn>2</mn>
</mrow>
</msqrt>
<mspace width='.3em'/>
<mo stretchy="false">|</mo>
<mspace width='.3em'/>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">/</mo>
<mi mathvariant='normal'>&#x003C3;</mi>
<msup><mo stretchy="false">|</mo>
<mn>1</mn>
</msup>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>otherwise</mi>
</mstyle></mrow>
</mtd></mtr></mtable>
</mrow><mo stretchy="true"> </mo></mrow>
</mrow></math>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mi mathvariant='italic'>H</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">,</mo>
<mn>2</mn>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mrow><mo stretchy="true">{</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="left" >
<mn>0</mn>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>if</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">=</mo>
<mo stretchy="false">&#x0221E;</mo>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>or</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>or</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>isnan</mi>
</mstyle></mrow>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">)</mo>
</mtd></mtr><mtr><mtd columnalign="left" >
<mo stretchy="false">&#x0221E;</mo>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>otherwise</mi>
<mspace width='.3em'/>
<mi mathvariant='normal'>if</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
</mtd></mtr><mtr><mtd columnalign="left" >
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">/</mo>
<mi mathvariant='normal'>&#x003C3;</mi>
<msup><mo stretchy="false">)</mo>
<mn>2</mn>
</msup>
<mo stretchy="false">/</mo>
<mn>2</mn>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>otherwise</mi>
</mstyle></mrow>
</mtd></mtr></mtable>
</mrow><mo stretchy="true"> </mo></mrow>
</mrow></math>

Note that, up to terms that are constant for our application,
these loss functions are the negative-log likelihood for the univariate 


<br/>
<br/>
<b><a name="Likelihood Functions.Likelihood_Enum" id="Likelihood Functions.Likelihood_Enum">Likelihood_Enum</a></b>


<code><font color="blue"><br/>
dismod_pde::Likelihood_Enum</font></code> is an <code><font color="blue">enum</font></code> type with the values 
<code><font color="blue">dismod_pde::gaussian_enum</font></code> and <code><font color="blue">dismod_pde::laplace_enum</font></code>.
You can use the vector

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::vector&lt;std::string&gt;&#xA0;dismod_pde::likelihood_enum.name()<br/>
</span></font></code>
to map from the <code><font color="blue">enum</font></code> type to the corresponding string; 
e.g., 

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;dismod_pde::likelihood_enum.name()[&#xA0;dismod_pde::gaussian_enum&#xA0;]&#xA0;==&#xA0;&quot;gaussian&quot;<br/>
</span></font></code>
<br/>
<b><a name="Likelihood Functions.Residual Function" id="Likelihood Functions.Residual Function">Residual Function</a></b>
<br/>
The dismod_pde residual scaling function for 
offset 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003B6;</mi>
</mrow></math>

,
model value 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>x</mi>
</mrow></math>

,
and matching value 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>y</mi>
</mrow></math>

 is defined by

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mi mathvariant='italic'>R</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>y</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='normal'>&#x003B6;</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='italic'>log</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B6;</mi>
<mo stretchy="false">+</mo>
<mi mathvariant='italic'>y</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">-</mo>
<mi>log</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B6;</mi>
<mo stretchy="false">+</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
</mrow></math>

<br/>
<b><big><a name="Vector" id="Vector">Vector</a></big></b>
<br/>
The symbol <code><font color="blue">dismod_pde::vector</font></code> is a 
<a href="http://www.coin-or.org/CppAD/Doc/simplevector.xml" target="_top"><span style='white-space: nowrap'>simple&#xA0;vector</span></a>
 template type.



<br/>
<br/>
<b><big><a name="parameter" id="parameter">parameter</a></big></b>
<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>parameter</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::Optimize_Parameter_Struct&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>parameter</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
The following fields of 
<code><i><font color="black"><span style='white-space: nowrap'>parameter</span></font></i></code>
 must be set
to the corresponding values:

<br/>
<br/>
<b><a name="parameter.max_ode_step" id="parameter.max_ode_step">max_ode_step</a></b>
<br/>
The parameter

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>parameter</span></font></i><font color="blue"><span style='white-space: nowrap'>.max_ode_step<br/>
</span></font></code>
determines the maximum age integration step to use when computing the functions

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>S</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 and 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>C</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 as approximate solutions of an ODE; see
<a href="optimize.xml#sfun_out.age_residual" target="_top"><span style='white-space: nowrap'>age_residual</span></a>
 below.

<code><i><font color="black"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;0&#xA0;&lt;&#xA0;parameter</span></font></i><font color="blue"><span style='white-space: nowrap'>.max_ode_step</span></font><i><font color="black"><span style='white-space: nowrap'><br/>
</span></font></i></code>
<br/>
<b><a name="parameter.print_level" id="parameter.print_level">print_level</a></b>
<br/>
The parameter

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>parameter</span></font></i><font color="blue"><span style='white-space: nowrap'>.print_level<br/>
</span></font></code>
determines the level of output that is printed by the optimization 
procedure.
<table><tr><td align='left'  valign='top'>

level <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code>  </td><td align='left'  valign='top'>
 Description </td></tr><tr><td align='left'  valign='top'>

0 </td><td align='left'  valign='top'>
 
	no printing 
</td></tr><tr><td align='left'  valign='top'>

4 </td><td align='left'  valign='top'>

	print a summary at the beginning and end of the optimization procedure
</td></tr><tr><td align='left'  valign='top'>

5 </td><td align='left'  valign='top'>
 
	print a <a href="ipopt_trace.xml" target="_top"><span style='white-space: nowrap'>trace</span></a>
 for each iteration of 
	the optimization procedure.
</td></tr>
</table>
<br/>
<b><a name="parameter.max_iteration" id="parameter.max_iteration">max_iteration</a></b>
<br/>
The parameter

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>parameter</span></font></i><font color="blue"><span style='white-space: nowrap'>.max_iteration<br/>
</span></font></code>
determines the maximum number of iterations that the optimizer
should attempt before giving up on convergence as specified by 

<code><i><font color="black"><span style='white-space: nowrap'>parameter</span></font></i><font color="blue"><span style='white-space: nowrap'>.converge_tolerance</span></font></code>
.

<br/>
<br/>
<b><a name="parameter.converge_tolerance" id="parameter.converge_tolerance">converge_tolerance</a></b>
<br/>
The parameter

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>parameter</span></font></i><font color="blue"><span style='white-space: nowrap'>.converge_tolerance<br/>
</span></font></code>
specifies the convergence criteria tolerance as a bound on the final value of
<code><font color="blue">Dual infeasibility</font></code>,
<code><font color="blue">Constraint violation</font></code>,
<code><font color="blue">Complementarity</font></code>,
as printed in the optimizer trace
(see <a href="optimize.xml#parameter.print_level" target="_top"><span style='white-space: nowrap'>print_level</span></a>
).

<br/>
<br/>
<b><a name="parameter.debug_output" id="parameter.debug_output">debug_output</a></b>
<br/>
The parameter

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;bool&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>parameter</span></font></i><font color="blue"><span style='white-space: nowrap'>.debug_output<br/>
</span></font></code>
specifies if extra debugging output should be generated
(possibly at the expense of slower execution speed).



<br/>
<br/>
<b><big><a name="grid" id="grid">grid</a></big></b>
<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::pair2index&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It is a <a href="pair2index.xml" target="_top"><span style='white-space: nowrap'>pair2index</span></a>
 object constructed in the following way

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;dismod_pde::pair2index&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>age</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>time_lower</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>time_upper</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>age</span></font></i></code>
, 
<code><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i></code>
, 
<code><i><font color="black"><span style='white-space: nowrap'>time_lower</span></font></i></code>
, 
and 
<code><i><font color="black"><span style='white-space: nowrap'>time_upper</span></font></i></code>
 are described directly below:

<br/>
<br/>
<b><a name="grid.G" id="grid.G">G</a></b>

<br/>
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>J</mi>
<mn>-1</mn>
</mrow></math>

 and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>K</mi>
<mn>-1</mn>
</mrow></math>

, if

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>valid</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>.pack(</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>
is true, then 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>i</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 is in the computation grid 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>G</mi>
</mrow></math>

.
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
</mrow></math>

 to denote the stochastic function values
on the computational grid; i.e.

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">=</mo>
<mrow><mo stretchy="true">{</mo><mrow><msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">:</mo>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>and</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>Q</mi>
<mn>-1</mn>
</mrow><mo stretchy="true">}</mo></mrow>
</mrow></math>

<br/>
<b><a name="grid.age" id="grid.age">age</a></b>
<br/>
The argument <a href="pair2index.xml#age" target="_top"><span style='white-space: nowrap'>age</span></a>
 
in the 
<code><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i></code>
 constructor specifies the grid of age values.
We use the notation 
<code><i><font color="black"><span style='white-space: nowrap'>J</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>age</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()</span></font></code>

and for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>J</mi>
<mn>-1</mn>
</mrow></math>

,
we sometimes use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>a</mi>
<mi mathvariant='italic'>j</mi>
</msub>
</mrow></math>

 for the value 
<code><i><font color="black"><span style='white-space: nowrap'>age</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
.   
See <a href="optimize.xml#measure_in.age_lower, age_upper" target="_top"><span style='white-space: nowrap'>age_lower,&#xA0;age_upper</span></a>

for extra conditions on 
<code><i><font color="black"><span style='white-space: nowrap'>age</span></font></i></code>
.

<br/>
<br/>
<b><a name="grid.cohort" id="grid.cohort">cohort</a></b>
<br/>
The argument <a href="pair2index.xml#cohort" target="_top"><span style='white-space: nowrap'>cohort</span></a>
 
to the 
<code><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i></code>
 constructor specifies the grid of cohort values.
We use the notation 
<code><i><font color="black"><span style='white-space: nowrap'>K</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()</span></font></code>

and for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>K</mi>
<mn>-1</mn>
</mrow></math>

,
we sometimes use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>c</mi>
<mi mathvariant='italic'>k</mi>
</msub>
</mrow></math>

 for the value 
<code><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
.
See <a href="optimize.xml#measure_in.time_lower, time_upper" target="_top"><span style='white-space: nowrap'>time_lower,&#xA0;time_upper</span></a>

for extra conditions on 
<code><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i></code>
.

<br/>
<br/>
<b><a name="grid.time_lower" id="grid.time_lower">time_lower</a></b>
<br/>
The argument <a href="pair2index.xml#time_lower" target="_top"><span style='white-space: nowrap'>time_lower</span></a>
 
to the 
<code><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i></code>
 constructor specifies the lower limit in time 
for the age-cohort grid pairs that are to
be included in the computations and results.

<br/>
<br/>
<b><a name="grid.time_upper" id="grid.time_upper">time_upper</a></b>
<br/>
The argument <a href="pair2index.xml#time_upper" target="_top"><span style='white-space: nowrap'>time_upper</span></a>
 
to the 
<code><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i></code>
 constructor specifies the upper limit in time 
for the age-cohort grid pairs that are to
be included in the computations and results.



<br/>
<br/>
<b><big><a name="sfun_in" id="sfun_in">sfun_in</a></big></b>
<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::vector&lt;dismod_pde::Sfun_Input_Struct&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
The size of this vector is

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()&#xA0;==&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>J</mi>
<mn>-1</mn>
</mrow></math>

 and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>K</mi>
<mn>-1</mn>
</mrow></math>

, if

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>valid</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>.pack(</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>
returns false, the corresponding age-cohort pair 
is not in the computational grid.
Otherwise, for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>Q</mi>
<mn>-1</mn>
</mrow></math>

, the information stored in

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].</span></font><i><font color="black"><span style='white-space: nowrap'>field_name</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
corresponds to 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>

; i.e.,
the stochastic function specified by 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
</mrow></math>


at age 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>a</mi>
<mi mathvariant='italic'>j</mi>
</msub>
</mrow></math>

 and cohort 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>c</mi>
<mi mathvariant='italic'>k</mi>
</msub>
</mrow></math>

.
The values for the 
<code><i><font color="black"><span style='white-space: nowrap'>field_name</span></font></i></code>
 are listed below:

<ol type="1"><li>
<a href="optimize.xml#sfun_in.optimize_zeta" target="_top"><span style='white-space: nowrap'>optimize_zeta</span></a>
,
	offset added before log in transformation of optimization problem.
</li><li>

<a href="optimize.xml#sfun_in.optimize_lower" target="_top"><span style='white-space: nowrap'>optimize_lower</span></a>
,
	specifies the lower bound for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>

 during the optimization.
</li><li>

<a href="optimize.xml#sfun_in.optimize_initial" target="_top"><span style='white-space: nowrap'>optimize_initial</span></a>
,
	specifies the initial value for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>


	where the optimization starts.
</li><li>

<a href="optimize.xml#sfun_in.optimize_upper" target="_top"><span style='white-space: nowrap'>optimize_upper</span></a>
,
	specifies the upper bound for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>

 during the optimization.
</li><li>

<a href="optimize.xml#sfun_in.prior_like" target="_top"><span style='white-space: nowrap'>prior_like</span></a>
,
	Huber loss function for direct prior on 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.prior_zeta" target="_top"><span style='white-space: nowrap'>prior_zeta</span></a>
,
	offset added before log in direct prior residual for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.prior_sigma" target="_top"><span style='white-space: nowrap'>prior_sigma</span></a>
,
	standard deviation for direct prior on 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.prior_mean" target="_top"><span style='white-space: nowrap'>prior_mean</span></a>
, 
	value corresponding to zero direct prior residual for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.age_like" target="_top"><span style='white-space: nowrap'>age_like</span></a>
,
	Huber loss function for age residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.age_zeta" target="_top"><span style='white-space: nowrap'>age_zeta</span></a>
,
	offset added to before log in definition of 
	
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.age_sigma" target="_top"><span style='white-space: nowrap'>age_sigma</span></a>
,
	standard deviation factor for age residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.age_order" target="_top"><span style='white-space: nowrap'>age_order</span></a>
,
	order for the age residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>

,
	must be <code><font color="blue">1</font></code> for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>S</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

, 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>C</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

.
</li><li>

<a href="optimize.xml#sfun_in.cohort_like" target="_top"><span style='white-space: nowrap'>cohort_like</span></a>
,
	Huber loss function for cohort residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.cohort_zeta" target="_top"><span style='white-space: nowrap'>cohort_zeta</span></a>
,
	offset added to before log in definition of 
	
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.cohort_sigma" target="_top"><span style='white-space: nowrap'>cohort_sigma</span></a>
,
	standard deviation factor for cohort residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.cohort_order" target="_top"><span style='white-space: nowrap'>cohort_order</span></a>
,
	order for the cohort residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>o</mi>
<mo stretchy="false">.</mo>
<mi mathvariant='italic'>q</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.cross_like" target="_top"><span style='white-space: nowrap'>cross_like</span></a>
,
	Huber loss function for cross residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>D</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.cross_zeta" target="_top"><span style='white-space: nowrap'>cross_zeta</span></a>
,
	offset added to before log in definition of 
	
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>D</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


</li><li>

<a href="optimize.xml#sfun_in.cross_sigma" target="_top"><span style='white-space: nowrap'>cross_sigma</span></a>
,
	standard deviation factor for cross residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>D</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


</li></ol>


<br/>
<br/>
<b><a name="sfun_in.optimize_zeta" id="sfun_in.optimize_zeta">optimize_zeta</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>o</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>q</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the offset added 
before the log in the transformation that re-scales the optimization 
problem.
To be specific, 
for each 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
</mrow></math>

 and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>Q</mi>
<mn>-1</mn>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mover accent='false'><mrow><mi mathvariant='italic'>s</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>p</mi>
</msubsup>
<mo stretchy="false">=</mo>
<mi>log</mi>
<mo stretchy="false">(</mo>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>o</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>q</mi>
</mrow>
</msubsup>
<mo stretchy="false">+</mo>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">)</mo>
</mrow></math>

The optimization is done by an generic optimizer with respect to
the transformed stochastic functions values 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>s</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mi mathvariant='italic'>G</mi>
</msub>
</mrow></math>

.


<br/>
<br/>
<b><a name="sfun_in.optimize_lower" id="sfun_in.optimize_lower">optimize_lower</a></b>
<br/>
The lower bound for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>

 during the optimization
procedure, is specified by 

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].optimize_lower<br/>
</span></font></code>
We use the notation 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>l</mi>
</mrow>
</msubsup>
</mrow></math>

 for this lower bound
and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
<mi mathvariant='italic'>l</mi>
</msubsup>
</mrow></math>

 for the vectors of all the lower bounds
on the entire grid.

<br/>
<br/>
<b><a name="sfun_in.optimize_initial" id="sfun_in.optimize_initial">optimize_initial</a></b>
<br/>
The routine <code><font color="blue">optimize</font></code> is a local optimizer and as such it requires 
a point to start the optimization procedure at. 
The 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>

 component of this starting point
is specified by the value

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].optimize_initial<br/>
</span></font></code>
All of these values must be greater than or equal zero.

<br/>
<br/>
<b><a name="sfun_in.optimize_upper" id="sfun_in.optimize_upper">optimize_upper</a></b>
<br/>
The upper bound for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>

 during the optimization
procedure, is specified by 

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].optimize_upper<br/>
</span></font></code>
where must be greater than or equal to corresponding lower bound.
We use the notation 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>u</mi>
</mrow>
</msubsup>
</mrow></math>

 for this upper bound
and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
<mi mathvariant='italic'>u</mi>
</msubsup>
</mrow></math>

 for the vectors of all the upper bounds
on the entire grid.

<br/>
<br/>
<b><a name="sfun_in.prior_like" id="sfun_in.prior_like">prior_like</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>h</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>p</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the Huber loss function index for
the direct prior for the stochastic function value 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>

.
This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;dismod_pde::Likelihood_Enum&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].prior_like<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.prior_residual" target="_top"><span style='white-space: nowrap'>prior_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.prior_zeta" id="sfun_in.prior_zeta">prior_zeta</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>p</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the offset added before 
the log in the calculation of the direct prior residual for 
the stochastic function value 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>

.
This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].prior_zeta<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.prior_residual" target="_top"><span style='white-space: nowrap'>prior_residual</span></a>
.
It must hold that 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>p</mi>
</mrow>
</msubsup>
<mo stretchy="false">&gt;</mo>
<mn>0</mn>
</mrow></math>

.

<br/>
<br/>
<b><a name="sfun_in.prior_sigma" id="sfun_in.prior_sigma">prior_sigma</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>p</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the standard deviation
of the direct prior for the stochastic function value 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>

.
This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].prior_sigma<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.prior_residual" target="_top"><span style='white-space: nowrap'>prior_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.prior_mean" id="sfun_in.prior_mean">prior_mean</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='normal'>&#x003BC;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>

 to denote
the stochastic function value 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>


at which the direct prior residual is zero.
This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].prior_mean<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.prior_residual" target="_top"><span style='white-space: nowrap'>prior_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.age_like" id="sfun_in.age_like">age_like</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>h</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the Huber loss function index for
the age residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>

.
This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].age_like<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.age_residual" target="_top"><span style='white-space: nowrap'>age_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.age_zeta" id="sfun_in.age_zeta">age_zeta</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the offset that is added before
takeing the logs in the definition of
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>

.
This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].age_zeta<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.age_residual" target="_top"><span style='white-space: nowrap'>age_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.age_sigma" id="sfun_in.age_sigma">age_sigma</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the standard deviation factor
for the age residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>

.
This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].age_sigma<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.age_residual" target="_top"><span style='white-space: nowrap'>age_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.age_order" id="sfun_in.age_order">age_order</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>o</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the order
for the age residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>

.
This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].age_order<br/>
</span></font></code>
It must have value one or two, and 
must be one when 
<code><i><font color="black"><span style='white-space: nowrap'>q</span></font></i></code>
 corresponds to 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>S</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

 (
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
</mrow></math>

) or 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>C</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

 (
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>1</mn>
</mrow></math>

) .
See <a href="optimize.xml#sfun_out.age_residual" target="_top"><span style='white-space: nowrap'>age_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.cohort_like" id="sfun_in.cohort_like">cohort_like</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>h</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>c</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>q</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the Huber function index for
the cohort residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].cohort_like<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.cohort_residual" target="_top"><span style='white-space: nowrap'>cohort_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.cohort_zeta" id="sfun_in.cohort_zeta">cohort_zeta</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>c</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>q</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the offset that is added before
taking the logs in the definition of 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].cohort_zeta<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.cohort_residual" target="_top"><span style='white-space: nowrap'>cohort_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.cohort_sigma" id="sfun_in.cohort_sigma">cohort_sigma</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>c</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>q</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the standard deviation factor for
the cohort residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].cohort_sigma<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.cohort_residual" target="_top"><span style='white-space: nowrap'>cohort_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.cohort_order" id="sfun_in.cohort_order">cohort_order</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>o</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>c</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>q</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the order
for the cohort residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>

.
This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].cohort_order<br/>
</span></font></code>
and must have value one or two.
See <a href="optimize.xml#sfun_out.cohort_residual" target="_top"><span style='white-space: nowrap'>cohort_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.cross_like" id="sfun_in.cross_like">cross_like</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>h</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>d</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>q</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the Huber function index for
the cross residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>D</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].cross_like<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.cross_residual" target="_top"><span style='white-space: nowrap'>cross_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.cross_zeta" id="sfun_in.cross_zeta">cross_zeta</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>d</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>q</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the offset that is added before
taking the logs in the definition of 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>D</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].cross_zeta<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.cross_residual" target="_top"><span style='white-space: nowrap'>cross_residual</span></a>
.

<br/>
<br/>
<b><a name="sfun_in.cross_sigma" id="sfun_in.cross_sigma">cross_sigma</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>d</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>q</mi>
</mrow>
</msubsup>
</mrow></math>

 to denote the standard deviation factor for
the cross residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>D</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>


This value is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].cross_sigma<br/>
</span></font></code>
See <a href="optimize.xml#sfun_out.cross_residual" target="_top"><span style='white-space: nowrap'>cross_residual</span></a>
.



<br/>
<br/>
<b><big><a name="covariate_value" id="covariate_value">covariate_value</a></big></b>



<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>covariate_value</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::vector&lt;double&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>covariate_value</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
its size is equal to 
<code><i><font color="black"><span style='white-space: nowrap'>L</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>N</span></font></i></code>
 where

<code><i><font color="black"><span style='white-space: nowrap'>L</span></font></i></code>
 is the number of measurements and 
<code><i><font color="black"><span style='white-space: nowrap'>N</span></font></i></code>
 is the
number of covariate columns.
We define covariate matrix 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>X</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mrow><mi mathvariant='italic'>L</mi>
<mo stretchy="false">&#x000D7;</mo>
<mi mathvariant='italic'>N</mi>
</mrow>
</msup>
</mrow></math>

 by
<code><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></code>

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>X</mi>
<mrow><mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>n</mi>
</mrow>
</msub>
<mo stretchy="false">=</mo>
</mrow></math>

 
<code><i><font color="black"><span style='white-space: nowrap'>covariate_value</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>N</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;]</span></font></code>

for 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;0&#xA0;,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>N</span></font></i><font color="blue"><span style='white-space: nowrap'>-1</span></font></code>
 and

<code><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;0&#xA0;,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>L</span></font></i><font color="blue"><span style='white-space: nowrap'>-1</span></font></code>
.



<br/>
<br/>
<b><big><a name="measure_in" id="measure_in">measure_in</a></big></b>
<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::vector&lt;dismod_pde::Measure_Input_Struct&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
The number of measurements 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>L</mi>
</mrow></math>

 is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>L</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()<br/>
</span></font></code>
For 
<code><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;0&#xA0;,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>L</span></font></i><font color="blue"><span style='white-space: nowrap'>-1</span></font></code>
,
the following fields of 
<code><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 must be set:

<table><tr><td align='left'  valign='top'>

<b>field name</b> </td><td align='left'  valign='top'>
 <b>Description</b> 
</td></tr><tr><td align='left'  valign='top'>

<a href="optimize.xml#measure_in.integrand" target="_top"><span style='white-space: nowrap'>integrand</span></a>
 </td><td align='left'  valign='top'>

	The integrand used to model the measurement.
</td></tr><tr><td align='left'  valign='top'>

<a href="optimize.xml#measure_in.age_lower, age_upper" target="_top"><span style='white-space: nowrap'>age_lower,&#xA0;age_upper</span></a>
 </td><td align='left'  valign='top'>

	The age limits for this measurement.
</td></tr><tr><td align='left'  valign='top'>

<a href="optimize.xml#measure_in.time_lower, time_upper" target="_top"><span style='white-space: nowrap'>time_lower,&#xA0;time_upper</span></a>
 
	</td><td align='left'  valign='top'>
 The time limits for this measurement.
</td></tr><tr><td align='left'  valign='top'>

<a href="optimize.xml#measure_in.meas_like" target="_top"><span style='white-space: nowrap'>meas_like</span></a>
 </td><td align='left'  valign='top'>

	Huber loss function used to model this measurement.
</td></tr><tr><td align='left'  valign='top'>

<a href="optimize.xml#measure_in.meas_zeta" target="_top"><span style='white-space: nowrap'>meas_zeta</span></a>
 </td><td align='left'  valign='top'>

	Offset that is added before taking the log in the likelihood.
</td></tr><tr><td align='left'  valign='top'>

<a href="optimize.xml#measure_in.meas_sigma" target="_top"><span style='white-space: nowrap'>meas_sigma</span></a>
 </td><td align='left'  valign='top'>

	Our model for the standard deviation of this measurement.
</td></tr><tr><td align='left'  valign='top'>

<a href="optimize.xml#measure_in.meas_value" target="_top"><span style='white-space: nowrap'>meas_value</span></a>
 </td><td align='left'  valign='top'>

	The value for this measurement. 
</td></tr>
</table>
<br/>
<b><a name="measure_in.integrand" id="measure_in.integrand">integrand</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mrow><mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

 to denote the integrand 
for the 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
</mrow></math>

-th measurement.
The value 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

 is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;dismod_pde::Integrand_Enum&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font><i><font color="black"><span style='white-space: nowrap'>.integrand<br/>
</span></font></i></code>
Each measurement is a definite integral of one of the following functions 
with respect to age and time (plus some random noise):
<table><tr><td align='left'  valign='top'>

<b>Definition</b> 
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <b>integrand</b>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <b>Description</b>
</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='normal'>&#x003B9;</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='normal'>&#x003B9;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>


	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">incidence_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> incidence rate

</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='normal'>&#x003C1;</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='normal'>&#x003C1;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>


	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">remission_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> remission rate

</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='normal'>&#x003C7;</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='normal'>&#x003C7;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>


	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">m_excess_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> excess mortality rate

</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='normal'>&#x003C9;</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='normal'>&#x003C9;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>


	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">m_other_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> other cause mortality rate

</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='italic'>w</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='normal'>&#x003C9;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mi mathvariant='normal'>&#x003C7;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>


	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">m_with_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> with condition mortality rate

</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='italic'>p</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='italic'>C</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">/</mo>
<mo stretchy="false">[</mo>
<mi mathvariant='italic'>S</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mi mathvariant='italic'>C</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">]</mo>
</mrow></math>


	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">prevalence_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> prevalence

</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='italic'>e</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='normal'>&#x003C7;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='italic'>p</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>


	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">m_prevalence_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> excess mortality rate times prevalence
	
</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='italic'>s</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='italic'>e</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>


	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">m_specific_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> cause specific mortality rate

</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='italic'>a</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='normal'>&#x003C9;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='italic'>e</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>


	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">m_all_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> all cause mortality rate

</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='normal'>&#x003C3;</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='italic'>w</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">/</mo>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='italic'>a</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>


	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">m_standard_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> standardized mortality ratio

</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='italic'>r</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<msup><mi mathvariant='italic'>I</mi>
<mi mathvariant='italic'>w</mi>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">/</mo>
<mi mathvariant='normal'>&#x003C9;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>


	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> <code><font color="blue">relative_risk_enum</font></code>
	</td><td align='left'  valign='top'>
 <code><span style='white-space: nowrap'>&#xA0;&#xA0;</span></code> relative risk ratio
</td></tr>
</table>
<br/>
<b><a name="measure_in.Integrand_Enum" id="measure_in.Integrand_Enum">Integrand_Enum</a></b>

<code><font color="blue"><br/>
dismod_pde::Integrand_Enum</font></code> is an <code><font color="blue">enum</font></code>
type with the values listed above.
Sometimes the corresponding integer value 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>i</mi>
</mrow></math>

 is used to denote a 
integrand function in the documentation below.
The vector

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;vector&lt;std::string&gt;&#xA0;dismod_pde::integrand_enum.name()<br/>
</span></font></code>
can be used to map from the indices 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>i</mi>
</mrow></math>

 to the corresponding string; 
e.g., 

<code><font color="blue"><span style='white-space: nowrap'><br/>
dismod_pde::integrand_enum.name()[&#xA0;dismod_pde::relative_risk_enum&#xA0;]&#xA0;==&#xA0;&quot;relative_risk&quot;<br/>
</span></font></code>
The number of possible integrands is equal to

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;dismod_pde::n_integrand_enum<br/>
</span></font></code>
<br/>
<b><a name="measure_in.age_lower, age_upper" id="measure_in.age_lower, age_upper">age_lower, age_upper</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>l</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02113;</mo>
</mrow>
</msub>
</mrow></math>

 and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>u</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02113;</mo>
</mrow>
</msub>
</mrow></math>

 to denote the 
lower and upper age integration limits for the 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
</mrow></math>

-th measurement.
These values are specified by 

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>].age_lower<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>].age_upper<br/>
</span></font></code>
For all 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
</mrow></math>

, it must hold that 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msub><mi mathvariant='italic'>a</mi>
<mn>1</mn>
</msub>
<mo stretchy="false">&#x02264;</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>l</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02113;</mo>
</mrow>
</msub>
<mo stretchy="false">&#x02264;</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>u</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02113;</mo>
</mrow>
</msub>
<mo stretchy="false">&#x02264;</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>J</mi>
<mn>-1</mn>
</mrow>
</msub>
</mrow></math>

<br/>
<b><a name="measure_in.time_lower, time_upper" id="measure_in.time_lower, time_upper">time_lower, time_upper</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>t</mi>
<mrow><mi mathvariant='italic'>l</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02113;</mo>
</mrow>
</msub>
</mrow></math>

 and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>t</mi>
<mrow><mi mathvariant='italic'>u</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02113;</mo>
</mrow>
</msub>
</mrow></math>

 to denote the 
lower and upper time integration limits for  the 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
</mrow></math>

-th measurement.
These values are specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>].time_lower<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>].time_upper<br/>
</span></font></code>
For all 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
</mrow></math>

, it must hold that 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msub><mi mathvariant='italic'>c</mi>
<mn>1</mn>
</msub>
<mo stretchy="false">+</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>J</mi>
<mn>-1</mn>
</mrow>
</msub>
<mo stretchy="false">&lt;</mo>
<msub><mi mathvariant='italic'>t</mi>
<mrow><mi mathvariant='italic'>l</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02113;</mo>
</mrow>
</msub>
<mo stretchy="false">&#x02264;</mo>
<msub><mi mathvariant='italic'>t</mi>
<mrow><mi mathvariant='italic'>u</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02113;</mo>
</mrow>
</msub>
<mo stretchy="false">&lt;</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><mi mathvariant='italic'>K</mi>
<mn>-2</mn>
</mrow>
</msub>
<mo stretchy="false">+</mo>
<msub><mi mathvariant='italic'>a</mi>
<mn>1</mn>
</msub>
</mrow></math>

<br/>
<b><a name="measure_in.meas_like" id="measure_in.meas_like">meas_like</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>h</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mrow></math>

 to denote the Huber function index 
for the 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
</mrow></math>

-th measurement which is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>].meas_like<br/>
</span></font></code>
See <a href="optimize.xml#measure_out.residual" target="_top"><span style='white-space: nowrap'>measure_out&#xA0;residual</span></a>
.

<br/>
<br/>
<b><a name="measure_in.meas_zeta" id="measure_in.meas_zeta">meas_zeta</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='normal'>&#x003B6;</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mrow></math>

 to denote the model offset 
added before the log in the residual
for the 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
</mrow></math>

-th measurement which is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>].meas_zeta<br/>
</span></font></code>
See <a href="optimize.xml#measure_out.residual" target="_top"><span style='white-space: nowrap'>measure_out&#xA0;residual</span></a>
.

<br/>
<br/>
<b><a name="measure_in.meas_sigma" id="measure_in.meas_sigma">meas_sigma</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mrow></math>

 to denote the standard deviation 
for the 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
</mrow></math>

-th measurement which is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>].meas_sigma<br/>
</span></font></code>
See <a href="optimize.xml#measure_out.residual" target="_top"><span style='white-space: nowrap'>measure_out&#xA0;residual</span></a>
.

<br/>
<br/>
<b><a name="measure_in.meas_value" id="measure_in.meas_value">meas_value</a></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>z</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mrow></math>

 to denote the value
for the 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
</mrow></math>

-th measurement which is specified by

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>].meas_value<br/>
</span></font></code>
See <a href="optimize.xml#measure_out.residual" target="_top"><span style='white-space: nowrap'>measure_out&#xA0;residual</span></a>
.




<br/>
<br/>
<b><big><a name="effect_in" id="effect_in">effect_in</a></big></b>
<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>effect_in</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::vector&lt;dismod_pde::Effect_Input_Struct&gt;&amp;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>effect_in</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
and its size must be equal to 
<code><i><font color="black"><span style='white-space: nowrap'>M</span></font></i></code>
, the number of 
measurement effects.
For 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;0&#xA0;,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>M</span></font></i><font color="blue"><span style='white-space: nowrap'>-1</span></font></code>
,
the following fields of 
<code><i><font color="black"><span style='white-space: nowrap'>effect_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 must be set:

<br/>
<br/>
<b><a name="effect_in.integrand" id="effect_in.integrand">integrand</a></b>
<br/>
The measurement integrand for this effect is

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Integrand_Enum&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>effect_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>].integrand<br/>
</span></font></code>
which is denoted by 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>m</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 below.

<br/>
<br/>
<b><a name="effect_in.covariate" id="effect_in.covariate">covariate</a></b>
<br/>
The covariate column for this measurement effect is

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>effect_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>].covariate<br/>
</span></font></code>
which is denoted by 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>n</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>m</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 below.

<br/>
<br/>
<b><a name="effect_in.lower" id="effect_in.lower">lower</a></b>
<br/>
The lower limit for this measurement effect during optimization is

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>effect_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>].lower<br/>
</span></font></code>
<br/>
<b><a name="effect_in.initial" id="effect_in.initial">initial</a></b>
<br/>
The initial value for this measurement effect during optimization is

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>effect_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>].initial<br/>
</span></font></code>
<br/>
<b><a name="effect_in.upper" id="effect_in.upper">upper</a></b>
<br/>
The upper limit for this measurement effect during optimization is

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>effect_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>].upper<br/>
</span></font></code>
<br/>
<b><big><a name="effect_out" id="effect_out">effect_out</a></big></b>
<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>effect_out</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;dismod_pde::vector&lt;double&gt;&amp;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>effect_out</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
and its size must be given by 

<code><i><font color="black"><span style='white-space: nowrap'>effect_out</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>M</span></font></i></code>
.  
The input value of its elements does not matter.
Upon return from <code><font color="blue">optimize</font></code>,
for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>m</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>M</mi>
<mn>-1</mn>
</mrow></math>

, 

<code><i><font color="black"><span style='white-space: nowrap'>effect_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 is the optimal estimate for 
the <i>m</i>-th measurement effect 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='normal'>&#x003B2;</mi>
<mi mathvariant='italic'>m</mi>
</msub>
</mrow></math>






<br/>
<br/>
<b><big><a name="sfun_out" id="sfun_out">sfun_out</a></big></b>
<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;dismod_pde::vector&lt;dismod_pde::Sfun_Output_Struct&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
The size of this vector is

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()&#xA0;==&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
The input value of the elements of 
<code><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i></code>
 does not matter.
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">.</mo>
<mo stretchy="false">.</mo>
<mo stretchy="false">.</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>J</mi>
<mn>-1</mn>
</mrow></math>

 and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">.</mo>
<mo stretchy="false">.</mo>
<mo stretchy="false">.</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>K</mi>
<mn>-1</mn>
</mrow></math>

, if

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>valid</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>.pack(</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>
returns false, the corresponding age-cohort pair 
is not in the computational grid.
Otherwise, Upon return from <code><font color="blue">optimize</font></code>,
for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>Q</mi>
<mn>-1</mn>
</mrow></math>

,
the information stored in

<code><font color="blue"><span style='white-space: nowrap'>&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].</span></font><i><font color="black"><span style='white-space: nowrap'>field_name</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
corresponds to 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>

; i.e., the stochastic function
specified by 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
</mrow></math>

 at age 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>a</mi>
<mi mathvariant='italic'>j</mi>
</msub>
</mrow></math>

 and cohort 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>c</mi>
<mi mathvariant='italic'>k</mi>
</msub>
</mrow></math>

.
The values for 
<code><i><font color="black"><span style='white-space: nowrap'>field_name</span></font></i></code>
 are listed directly below:

<ol type="1"><li>
<a href="optimize.xml#sfun_out.estimate" target="_top"><span style='white-space: nowrap'>estimate</span></a>
,
	final estimate returned by the optimization process.
</li><li>

<a href="optimize.xml#sfun_out.prior_residual" target="_top"><span style='white-space: nowrap'>prior_residual</span></a>
,
	prior residuals corresponding to final estimate.
</li><li>

<a href="optimize.xml#sfun_out.prior_scaled" target="_top"><span style='white-space: nowrap'>prior_scaled</span></a>
,
	scaled prior residuals corresponding to final estimate.
</li><li>

<a href="optimize.xml#sfun_out.age_residual" target="_top"><span style='white-space: nowrap'>age_residual</span></a>
,
	age residuals corresponding to final estimate.
</li><li>

<a href="optimize.xml#sfun_out.age_scaled" target="_top"><span style='white-space: nowrap'>age_scaled</span></a>
,
	scaled age residuals corresponding to final estimate.
</li><li>

<a href="optimize.xml#sfun_out.cohort_residual" target="_top"><span style='white-space: nowrap'>cohort_residual</span></a>
,
	cohort residuals corresponding to final estimate.
</li><li>

<a href="optimize.xml#sfun_out.cohort_scaled" target="_top"><span style='white-space: nowrap'>cohort_scaled</span></a>
,
	scaled cohort residuals corresponding to final estimate.
</li><li>

<a href="optimize.xml#sfun_out.cross_residual" target="_top"><span style='white-space: nowrap'>cross_residual</span></a>
,
	cross residuals corresponding to final estimate.
</li><li>

<a href="optimize.xml#sfun_out.cross_scaled" target="_top"><span style='white-space: nowrap'>cross_scaled</span></a>
,
	scaled cross residuals corresponding to final estimate.
</li></ol>


<br/>
<br/>
<b><a name="sfun_out.estimate" id="sfun_out.estimate">estimate</a></b>
<br/>
The 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
</mrow></math>

 component is of the final estimate
returned by the optimizer is

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].estimate<br/>
</span></font></code>
<br/>
<b><a name="sfun_out.prior_residual" id="sfun_out.prior_residual">prior_residual</a></b>
<br/>
The return value of

<code><font color="blue"><span style='white-space: nowrap'>&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].prior_residual<br/>
</span></font></code>
is set to the direct prior residual.
Note that this is defined for every 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
</mrow></math>

.
To be specific,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mi mathvariant='italic'>P</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="true">(</mo><mrow><msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003BC;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>p</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">)</mo></mrow>
</mrow></math>

where 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
</mrow></math>

 is the return
<a href="optimize.xml#sfun_out.estimate" target="_top"><span style='white-space: nowrap'>estimate</span></a>
.

<br/>
<br/>
<b><a name="sfun_out.prior_scaled" id="sfun_out.prior_scaled">prior_scaled</a></b>
<br/>
The return value of

<code><font color="blue"><span style='white-space: nowrap'>&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].prior_scaled<br/>
</span></font></code>
is set to the scaled residual for the direct prior which is defined by

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mrow><mo stretchy="true">{</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="left" >
<mrow><mo stretchy="true"> </mo><mrow><msubsup><mi mathvariant='italic'>P</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
</mrow><mo stretchy="true">/</mo></mrow>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>p</mi>
</mrow>
</msubsup>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>if</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mn>0</mn>
<mo stretchy="false">&lt;</mo>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>p</mi>
</mrow>
</msubsup>
<mo stretchy="false">&lt;</mo>
<mo stretchy="false">+</mo>
<mo stretchy="false">&#x0221E;</mo>
</mtd></mtr><mtr><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>nan</mi>
</mstyle></mrow>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>Otherwise</mi>
</mstyle></mrow>
</mtd></mtr></mtable>
</mrow><mo stretchy="true"> </mo></mrow>
</mrow></math>

<br/>
<b><a name="sfun_out.age_residual" id="sfun_out.age_residual">age_residual</a></b>
<br/>
The return value of

<code><font color="blue"><span style='white-space: nowrap'>&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].age_residual<br/>
</span></font></code>
is set to the age residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 (defined below).
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>Q</mi>
<mn>-1</mn>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>1</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>nan</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mo stretchy="false">&#x021D0;</mo>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>not</mi>
<mspace width='.3em'/>
<mi mathvariant='normal'>in</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='italic'>G</mi>
</mrow></math>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>2</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>nan</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mo stretchy="false">&#x021D0;</mo>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>2</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>not</mi>
<mspace width='.3em'/>
<mi mathvariant='normal'>in</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='italic'>G</mi>
</mrow></math>

For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
</mrow></math>

 such that 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>2</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>Q</mi>
<mn>-1</mn>
</mrow></math>

, and 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>a</mi>
<mi mathvariant='italic'>j</mi>
</msub>
<mo stretchy="false">&#x02264;</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">&#x02264;</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
</mrow></math>

, 
we define the function

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mover accent='false'><mrow><mi mathvariant='italic'>s</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mfrac><mrow><msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mi mathvariant='italic'>j</mi>
</msub>
<mo stretchy="false">)</mo>
</mrow>
<mrow><msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mi mathvariant='italic'>j</mi>
</msub>
</mrow>
</mfrac>
</mrow></math>

We define the functions

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>S</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 (
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
</mrow></math>

) and 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>C</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 (
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>1</mn>
</mrow></math>

) 
as approximate solutions for the following ODE:

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="right" >
<msub><mover accent='false'><mrow><mi mathvariant='italic'>S</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>a</mi>
<mi mathvariant='italic'>j</mi>
</msub>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<msub><mi mathvariant='italic'>S</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
</mtd></mtr><mtr><mtd columnalign="right" >
<msub><mover accent='false'><mrow><mi mathvariant='italic'>C</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>a</mi>
<mi mathvariant='italic'>j</mi>
</msub>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<msub><mi mathvariant='italic'>C</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
</mtd></mtr><mtr><mtd columnalign="right" >
<msub><mo stretchy="false">&#x02202;</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
</msub>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>S</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<mo stretchy="false">-</mo>
<mo stretchy="false">[</mo>
<msub><mover accent='false'><mrow><mi mathvariant='normal'>&#x003B9;</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<msub><mover accent='false'><mrow><mi mathvariant='normal'>&#x003C9;</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">]</mo>
<mspace width='.3em'/>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>S</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<msub><mover accent='false'><mrow><mi mathvariant='normal'>&#x003C1;</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>C</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
</mtd></mtr><mtr><mtd columnalign="right" >
<msub><mo stretchy="false">&#x02202;</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
</msub>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>C</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<msub><mover accent='false'><mrow><mi mathvariant='normal'>&#x003B9;</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>S</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">-</mo>
<mo stretchy="false">[</mo>
<msub><mover accent='false'><mrow><mi mathvariant='normal'>&#x003C1;</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<msub><mover accent='false'><mrow><mi mathvariant='normal'>&#x003C9;</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<msub><mover accent='false'><mrow><mi mathvariant='normal'>&#x003C7;</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">]</mo>
<mspace width='.3em'/>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>C</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
</mtd></mtr></mtable>
</mrow></math>

The parameter
<a href="optimize.xml#parameter.max_ode_step" target="_top"><span style='white-space: nowrap'>max_ode_step</span></a>
 
determines how accurately we approximate the solution of this ODE;
i.e., 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mover accent='false'><mrow><mi mathvariant='italic'>s</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mn>1</mn>
</mrow></math>

.
We define the first order age residuals 
for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>S</mi>
</mrow></math>

 (
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
</mrow></math>

)
and for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>C</mi>
</mrow></math>

 (
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>1</mn>
</mrow></math>

)

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>1</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="true">(</mo><mrow><msubsup><mover accent='false'><mrow><mi mathvariant='italic'>s</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msub><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">)</mo></mrow>
<mspace width='.3em'/>
<mo stretchy="false">&#x021D0;</mo>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
</mrow></math>

For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>2</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>Q</mi>
<mn>-1</mn>
</mrow></math>

, we define the 
first order age residual functions

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>1</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="true">(</mo><mrow><msub><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">)</mo></mrow>
<mspace width='.3em'/>
<mo stretchy="false">&#x021D0;</mo>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
</mrow></math>

For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>2</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>Q</mi>
<mn>-1</mn>
</mrow></math>

,
we define the second order age residual functions

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>2</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mrow><mo stretchy="true">[</mo><mrow><mfrac><mrow><mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="true">(</mo><mrow><msub><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>2</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">)</mo></mrow>
</mrow>
<mrow><msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>2</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
</mrow>
</mfrac>
<mo stretchy="false">-</mo>
<mfrac><mrow><mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="true">(</mo><mrow><msub><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
</msub>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">)</mo></mrow>
</mrow>
<mrow><msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>j</mi>
</mrow>
</msub>
</mrow>
</mfrac>
</mrow><mo stretchy="true">]</mo></mrow>
<mspace width='.3em'/>
<mo stretchy="false">&#x021D0;</mo>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>2</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
</mrow></math>

<br/>
<b><a name="sfun_out.age_scaled" id="sfun_out.age_scaled">age_scaled</a></b>
<br/>
The return the value of 

<code><font color="blue"><span style='white-space: nowrap'>&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].age_scaled<br/>
</span></font></code>
is set to the scaled age residual which is defined by

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mrow><mo stretchy="true">{</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="left" >
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>1</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">/</mo>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>if</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>o</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
<mo stretchy="false">=</mo>
<mn>1</mn>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>and</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mn>0</mn>
<mo stretchy="false">&lt;</mo>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
<mo stretchy="false">&lt;</mo>
<mo stretchy="false">+</mo>
<mo stretchy="false">&#x0221E;</mo>
</mtd></mtr><mtr><mtd columnalign="left" >
<msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>2</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">/</mo>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>if</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>o</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
<mo stretchy="false">=</mo>
<mn>2</mn>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>and</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mn>0</mn>
<mo stretchy="false">&lt;</mo>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
<mo stretchy="false">&lt;</mo>
<mo stretchy="false">+</mo>
<mo stretchy="false">&#x0221E;</mo>
</mtd></mtr><mtr><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>nan</mi>
</mstyle></mrow>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>Otherwise</mi>
</mstyle></mrow>
</mtd></mtr></mtable>
</mrow><mo stretchy="true"> </mo></mrow>
</mrow></math>

<br/>
<b><a name="sfun_out.cohort_residual" id="sfun_out.cohort_residual">cohort_residual</a></b>
<br/>
The return value of

<code><font color="blue"><span style='white-space: nowrap'>&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].cohort_residual<br/>
</span></font></code>
is set to the age residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 (defined below).
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>Q</mi>
<mn>-1</mn>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>1</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>nan</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mo stretchy="false">&#x021D0;</mo>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>not</mi>
<mspace width='.3em'/>
<mi mathvariant='normal'>in</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='italic'>G</mi>
</mrow></math>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>2</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>nan</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mo stretchy="false">&#x021D0;</mo>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>2</mn>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>not</mi>
<mspace width='.3em'/>
<mi mathvariant='normal'>in</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='italic'>G</mi>
</mrow></math>

We define the first order cohort residual functions

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>1</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="true">(</mo><mrow><msub><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">)</mo></mrow>
<mspace width='.3em'/>
<mo stretchy="false">&#x021D0;</mo>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
</mrow></math>

We define the second order age residual functions

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>2</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mrow><mo stretchy="true">[</mo><mrow><mfrac><mrow><mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="true">(</mo><mrow><msub><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>2</mn>
</mrow>
</msub>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">)</mo></mrow>
</mrow>
<mrow><msub><mi mathvariant='italic'>c</mi>
<mrow><mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>2</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
</mrow>
</mfrac>
<mo stretchy="false">-</mo>
<mfrac><mrow><mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="true">(</mo><mrow><msub><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">)</mo></mrow>
</mrow>
<mrow><msub><mi mathvariant='italic'>c</mi>
<mrow><mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><mi mathvariant='italic'>k</mi>
</mrow>
</msub>
</mrow>
</mfrac>
</mrow><mo stretchy="true">]</mo></mrow>
<mspace width='.3em'/>
<mo stretchy="false">&#x021D0;</mo>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>2</mn>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
</mrow></math>

<br/>
<b><a name="sfun_out.cohort_scaled" id="sfun_out.cohort_scaled">cohort_scaled</a></b>
<br/>
The return the value of 

<code><font color="blue"><span style='white-space: nowrap'>&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].cohort_scaled<br/>
</span></font></code>
is set to the scaled age residual which is defined by

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mrow><mo stretchy="true">{</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="left" >
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>1</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">/</mo>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>c</mi>
</mrow>
</msubsup>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>if</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>o</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>c</mi>
</mrow>
</msubsup>
<mo stretchy="false">=</mo>
<mn>1</mn>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>and</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mn>0</mn>
<mo stretchy="false">&lt;</mo>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>c</mi>
</mrow>
</msubsup>
<mo stretchy="false">&lt;</mo>
<mo stretchy="false">+</mo>
<mo stretchy="false">&#x0221E;</mo>
</mtd></mtr><mtr><mtd columnalign="left" >
<msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mn>2</mn>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">/</mo>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>c</mi>
</mrow>
</msubsup>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>if</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>o</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>c</mi>
</mrow>
</msubsup>
<mo stretchy="false">=</mo>
<mn>2</mn>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>and</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mn>0</mn>
<mo stretchy="false">&lt;</mo>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>c</mi>
</mrow>
</msubsup>
<mo stretchy="false">&lt;</mo>
<mo stretchy="false">+</mo>
<mo stretchy="false">&#x0221E;</mo>
</mtd></mtr><mtr><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>nan</mi>
</mstyle></mrow>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>Otherwise</mi>
</mstyle></mrow>
</mtd></mtr></mtable>
</mrow><mo stretchy="true"> </mo></mrow>
</mrow></math>

<br/>
<b><a name="sfun_out.cross_residual" id="sfun_out.cross_residual">cross_residual</a></b>
<br/>
The return value of

<code><font color="blue"><span style='white-space: nowrap'>&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].cross_residual<br/>
</span></font></code>
is set to the age residual 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>D</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 (defined below).
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>Q</mi>
<mn>-1</mn>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mi mathvariant='italic'>D</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>nan</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mo stretchy="false">&#x021D0;</mo>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>or</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>or</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>not</mi>
<mspace width='.3em'/>
<mi mathvariant='normal'>in</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='italic'>G</mi>
</mrow></math>

otherwise

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msubsup><mi mathvariant='italic'>D</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mfrac><mrow><mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="true">(</mo><mrow><msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>d</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">)</mo></mrow>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="true">(</mo><mrow><msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>s</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003B6;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>d</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">)</mo></mrow>
</mrow>
<mrow><msqrt><mrow><mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><mi mathvariant='italic'>k</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>c</mi>
<mi mathvariant='italic'>k</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mi mathvariant='italic'>j</mi>
</msub>
<mo stretchy="false">)</mo>
</mrow>
</msqrt>
</mrow>
</mfrac>
</mrow></math>

<br/>
<b><a name="sfun_out.cross_scaled" id="sfun_out.cross_scaled">cross_scaled</a></b>
<br/>
The return the value of 

<code><font color="blue"><span style='white-space: nowrap'>&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sfun_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Q</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i><font color="blue"><span style='white-space: nowrap'>].cross_scaled<br/>
</span></font></code>
is set to the scaled age residual which is defined by

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mrow><mo stretchy="true">{</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="left" >
<msubsup><mi mathvariant='italic'>D</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">/</mo>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>d</mi>
</mrow>
</msubsup>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>if</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mn>0</mn>
<mo stretchy="false">&lt;</mo>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>c</mi>
</mrow>
</msubsup>
<mo stretchy="false">&lt;</mo>
<mo stretchy="false">+</mo>
<mo stretchy="false">&#x0221E;</mo>
</mtd></mtr><mtr><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>nan</mi>
</mstyle></mrow>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>Otherwise</mi>
</mstyle></mrow>
</mtd></mtr></mtable>
</mrow><mo stretchy="true"> </mo></mrow>
</mrow></math>

<br/>
<b><big><a name="measure_out" id="measure_out">measure_out</a></big></b>
<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>measure_out</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;dismod_pde::vector&lt;dismod_pde::Measure_Output_Struct&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_out</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
and it has size 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>L</mi>
</mrow></math>

.
The input value of its elements does not matter.
Upon return,
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>L</mi>
<mn>-1</mn>
</mrow></math>

, the value of 

<code><font color="blue"><span style='white-space: nowrap'>&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>].</span></font><i><font color="black"><span style='white-space: nowrap'>field_name</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
has been set as follows:
<ol type="1"><li>
<a href="optimize.xml#measure_out.model" target="_top"><span style='white-space: nowrap'>model</span></a>
,
is the value that 
<a href="optimize.xml#sfun_out.estimate" target="_top"><span style='white-space: nowrap'>estimate</span></a>
 and
<a href="optimize.xml#effect_out" target="_top"><span style='white-space: nowrap'>effect_out</span></a>

predict for the integrand; i.e. 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>I</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>

.
</li><li>

<a href="optimize.xml#measure_out.adjusted" target="_top"><span style='white-space: nowrap'>adjusted</span></a>
,
is the value that 
<a href="optimize.xml#effect_out" target="_top"><span style='white-space: nowrap'>effect_out</span></a>

yields for the covariate adjusted measurements 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>Z</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B2;</mi>
<mo stretchy="false">)</mo>
</mrow></math>

.
</li><li>

<a href="optimize.xml#measure_out.residual" target="_top"><span style='white-space: nowrap'>residual</span></a>
,
is the log transformed measurement minus the log transformed model
</li><li>

<a href="optimize.xml#measure_out.scaled" target="_top"><span style='white-space: nowrap'>scaled</span></a>
,
is a scaled version of the residual. 
</li></ol>


<br/>
<br/>
<b><a name="measure_out.adjusted" id="measure_out.adjusted">adjusted</a></b>
<br/>
Let 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003B2;</mi>
</mrow></math>

 be the vector of covariate effects
corresponding to the 
<a href="optimize.xml#effect_out" target="_top"><span style='white-space: nowrap'>effect_out</span></a>
.
We define the covariate adjusted measurement function by

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="right" >
<mi mathvariant='normal'>&#x003B4;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>m</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<mrow><mo stretchy="true">{</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="left" >
<mn>1</mn>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>if</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>m</mi>
<mo stretchy="false">)</mo>
</mtd></mtr><mtr><mtd columnalign="left" >
<mn>0</mn>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>otherwise</mi>
</mstyle></mrow>
</mtd></mtr></mtable>
</mrow><mo stretchy="true"> </mo></mrow>
</mtd></mtr><mtr><mtd columnalign="right" >
<msub><mi mathvariant='italic'>Z</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B2;</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<msub><mi mathvariant='italic'>z</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mspace width='.3em'/>
<mi>exp</mi>
<mrow><mo stretchy="true">(</mo><mrow><mo stretchy="false">-</mo>
<munderover><mo displaystyle='true' largeop='true'>&#x02211;</mo>
<mrow><mi mathvariant='italic'>m</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
</mrow>
<mrow><mi mathvariant='italic'>M</mi>
<mn>-1</mn>
</mrow>
</munderover>
<mi mathvariant='normal'>&#x003B4;</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>m</mi>
<mo stretchy="false">)</mo>
<msub><mi mathvariant='italic'>X</mi>
<mrow><mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>n</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>m</mi>
<mo stretchy="false">)</mo>
</mrow>
</msub>
<msub><mi mathvariant='normal'>&#x003B2;</mi>
<mi mathvariant='italic'>m</mi>
</msub>
</mrow><mo stretchy="true">)</mo></mrow>
</mtd></mtr></mtable>
</mrow></math>

See 
<a href="optimize.xml#covariate_value" target="_top"><span style='white-space: nowrap'>covariate_value</span></a>
 for the definition
of 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>X</mi>
</mrow></math>

,
<a href="optimize.xml#effect_in.integrand" target="_top"><span style='white-space: nowrap'>effect_in</span></a>
 for the definition
of the integrand index 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>m</mi>
<mo stretchy="false">)</mo>
</mrow></math>

, and
<a href="optimize.xml#measure_in.integrand" target="_top"><span style='white-space: nowrap'>measure_in</span></a>
 for the definition
of the integrand index 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

.
The return value of

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>].adjusted<br/>
</span></font></code>
is equal to 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>Z</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B2;</mi>
<mo stretchy="false">)</mo>
</mrow></math>

.

<br/>
<br/>
<b><a name="measure_out.model" id="measure_out.model">model</a></b>
<br/>
Let 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
</mrow></math>

 be the stochastic functions,
on the computational grid 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>G</mi>
</mrow></math>

,
corresponding to the final
<a href="optimize.xml#sfun_out.estimate" target="_top"><span style='white-space: nowrap'>estimate</span></a>
.
The return value of

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>measure_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>ell</span></font></i><font color="blue"><span style='white-space: nowrap'>].model<br/>
</span></font></code>
is given by 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>I</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
</mrow></math>

 defined below:
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>The midpoints for the age and time limits are denoted by

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="right" >
<msub><mover accent='false'><mrow><mi mathvariant='italic'>a</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>l</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02113;</mo>
</mrow>
</msub>
<mo stretchy="false">+</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mi mathvariant='italic'>u</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02113;</mo>
</mrow>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">/</mo>
<mn>2</mn>
</mtd></mtr><mtr><mtd columnalign="right" >
<msub><mover accent='false'><mrow><mi mathvariant='italic'>t</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>t</mi>
<mrow><mi mathvariant='italic'>l</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02113;</mo>
</mrow>
</msub>
<mo stretchy="false">+</mo>
<msub><mi mathvariant='italic'>t</mi>
<mrow><mi mathvariant='italic'>u</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02113;</mo>
</mrow>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">/</mo>
<mn>2</mn>
</mtd></mtr></mtable>
</mrow></math>

The indices 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<munder><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></munder>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

, and

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mover><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></mover>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

 are defined by

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="right" >
<msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
<mo stretchy="false">&#x02264;</mo>
</mtd><mtd columnalign="center" >
<msub><mover accent='false'><mrow><mi mathvariant='italic'>a</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mtd><mtd columnalign="left" >
<mo stretchy="false">&lt;</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
</mtd></mtr><mtr><mtd columnalign="right" >
<msub><mi mathvariant='italic'>c</mi>
<mrow><munder><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></munder>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
<mo stretchy="false">&#x02264;</mo>
</mtd><mtd columnalign="center" >
<msub><mover accent='false'><mrow><mi mathvariant='italic'>t</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mtd><mtd columnalign="left" >
<mo stretchy="false">&lt;</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><munder><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></munder>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
</mtd></mtr><mtr><mtd columnalign="right" >
<msub><mi mathvariant='italic'>c</mi>
<mrow><mover><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></mover>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
<mo stretchy="false">&#x02264;</mo>
</mtd><mtd columnalign="center" >
<msub><mover accent='false'><mrow><mi mathvariant='italic'>t</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
</mtd><mtd columnalign="left" >
<mo stretchy="false">&lt;</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><mover><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></mover>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
</mtd></mtr></mtable>
</mrow></math>

The notation 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

 is the integrand index for 
the 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
</mrow></math>

-th measurement;
see <a href="optimize.xml#measure_in.integrand" target="_top"><span style='white-space: nowrap'>integrand</span></a>
.
We define 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>I</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>s</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 as the bilinear interpolant 
of 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>I</mi>
<mrow><mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msup>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x000B7;</mo>
<mo stretchy="false">)</mo>
</mrow></math>

,
with respect to age and time, 
evaluated at age 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>a</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mrow></math>

 and time 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>t</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mrow></math>

.

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="right" >
<msub><mover accent='false'><mrow><mi mathvariant='italic'>I</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<msubsup><mi mathvariant='italic'>I</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">,</mo>
<munder><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></munder>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
<mrow><mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mfrac><mrow><msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>a</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mrow>
<mrow><msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mrow>
</mfrac>
<mfrac><mrow><msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
<mo stretchy="false">+</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><munder><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></munder>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>t</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mrow>
<mrow><msub><mi mathvariant='italic'>c</mi>
<mrow><munder><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></munder>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><munder><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></munder>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mrow>
</mfrac>
</mtd></mtr><mtr><mtd columnalign="right" >
</mtd><mtd columnalign="center" >
<mo stretchy="false">+</mo>
</mtd><mtd columnalign="left" >
<msubsup><mi mathvariant='italic'>I</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">,</mo>
<munder><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></munder>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
<mrow><mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mfrac><mrow><msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>a</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mrow>
<mrow><msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mrow>
</mfrac>
<mfrac><mrow><msub><mover accent='false'><mrow><mi mathvariant='italic'>t</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><munder><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></munder>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mrow>
<mrow><msub><mi mathvariant='italic'>c</mi>
<mrow><munder><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></munder>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><munder><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></munder>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mrow>
</mfrac>
</mtd></mtr><mtr><mtd columnalign="right" >
</mtd><mtd columnalign="center" >
<mo stretchy="false">+</mo>
</mtd><mtd columnalign="left" >
<msubsup><mi mathvariant='italic'>I</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mover><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></mover>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
<mrow><mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mfrac><mrow><msub><mover accent='false'><mrow><mi mathvariant='italic'>a</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mrow>
<mrow><msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mrow>
</mfrac>
<mfrac><mrow><msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">+</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><mover><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></mover>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>t</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mrow>
<mrow><msub><mi mathvariant='italic'>c</mi>
<mrow><mover><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></mover>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><mover><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></mover>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mrow>
</mfrac>
</mtd></mtr><mtr><mtd columnalign="right" >
</mtd><mtd columnalign="center" >
<mo stretchy="false">+</mo>
</mtd><mtd columnalign="left" >
<msubsup><mi mathvariant='italic'>I</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mover><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></mover>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
<mrow><mi mathvariant='italic'>i</mi>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mfrac><mrow><msub><mover accent='false'><mrow><mi mathvariant='italic'>a</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mrow>
<mrow><msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mrow>
</mfrac>
<mfrac><mrow><msub><mover accent='false'><mrow><mi mathvariant='italic'>t</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>a</mi>
<mrow><mo stretchy="false">&#x0006A;</mo>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><mover><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></mover>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mrow>
<mrow><msub><mi mathvariant='italic'>c</mi>
<mrow><mover><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></mover>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>c</mi>
<mrow><mover><mrow><mi mathvariant='normal'>&#x003BA;</mi>
</mrow>
<mo stretchy="true">&#x000AF;</mo></mover>
<mo stretchy="false">(</mo>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">)</mo>
</mrow>
</msub>
</mrow>
</mfrac>
</mtd></mtr></mtable>
</mrow></math>

<br/>
<b><a name="measure_out.residual" id="measure_out.residual">residual</a></b>
<br/>
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>L</mi>
<mn>-1</mn>
</mrow></math>

,
we use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>R</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">,</mo>
<mi mathvariant='normal'>&#x003B2;</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 to denote the measurement residuals 
which are defined by

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msub><mi mathvariant='italic'>R</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">,</mo>
<mi mathvariant='normal'>&#x003B2;</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="true">[</mo><mrow><msub><mi mathvariant='italic'>Z</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B2;</mi>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>I</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msub><mi mathvariant='normal'>&#x003B6;</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mrow><mo stretchy="true">]</mo></mrow>
</mrow></math>

<br/>
<b><a name="measure_out.scaled" id="measure_out.scaled">scaled</a></b>
<br/>
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>L</mi>
<mn>-1</mn>
</mrow></math>

,
the scaled residual is defined by

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mrow><mo stretchy="true">{</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="left" >
<msub><mi mathvariant='italic'>R</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">,</mo>
<mi mathvariant='normal'>&#x003B2;</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">/</mo>
<msub><mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>if</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mn>0</mn>
<mo stretchy="false">&lt;</mo>
<msub><mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">&lt;</mo>
<mo stretchy="false">+</mo>
<mo stretchy="false">&#x0221E;</mo>
</mtd></mtr><mtr><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>nan</mi>
</mstyle></mrow>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>otherwise</mi>
</mstyle></mrow>
</mtd></mtr></mtable>
</mrow><mo stretchy="true"> </mo></mrow>
</mrow></math>

<br/>
<b><big><a name="message" id="message">message</a></big></b>
<br/>
The return value 
<code><i><font color="black"><span style='white-space: nowrap'>message</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;std::string&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>message</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
Upon return, it has one of the following values:
<code><font color='blue'><pre style='display:inline'> 
	&quot;optimize: failed for unknown reason&quot;
	&quot;optimize: success&quot;
	&quot;optimize: estimate is not as accurate as desired&quot;
	&quot;optimize: maximum number of iterations exceeded&quot;
	&quot;optimize: stopped because step size was to small&quot;
	&quot;optimize: stopped because estimate was diverging&quot;
</pre></font></code>


<br/>
<br/>
<b><big><a name="MAP Optimization" id="MAP Optimization">MAP Optimization</a></big></b>


<br/>
<br/>
<b><a name="MAP Optimization.Objective" id="MAP Optimization.Objective">Objective</a></b>
<br/>
The MAP objective corresponding to the residuals and likelihoods above is

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="right" >
<mi mathvariant='italic'>f</mi>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">,</mo>
<mi mathvariant='normal'>&#x003B2;</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<munder><mo displaystyle='true' largeop='true'>&#x02211;</mo>
<mrow><mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
</mrow>
</munder>
<munderover><mo displaystyle='true' largeop='true'>&#x02211;</mo>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
</mrow>
<mn>5</mn>
</munderover>
<mi mathvariant='italic'>H</mi>
<mrow><mo stretchy="true">[</mo><mrow><msubsup><mi mathvariant='italic'>A</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>h</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">]</mo></mrow>
<mo stretchy="false">+</mo>
<mi mathvariant='italic'>H</mi>
<mrow><mo stretchy="true">[</mo><mrow><msubsup><mi mathvariant='italic'>B</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>o</mi>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>c</mi>
</mrow>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>h</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>c</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">]</mo></mrow>
</mtd></mtr><mtr><mtd columnalign="right" >
</mtd><mtd columnalign="center" >
<mo stretchy="false">+</mo>
</mtd><mtd columnalign="left" >
<munder><mo displaystyle='true' largeop='true'>&#x02211;</mo>
<mrow><mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
</mrow>
</munder>
<munderover><mo displaystyle='true' largeop='true'>&#x02211;</mo>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
</mrow>
<mn>5</mn>
</munderover>
<mi mathvariant='italic'>H</mi>
<mrow><mo stretchy="true">[</mo><mrow><msubsup><mi mathvariant='italic'>D</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>d</mi>
</mrow>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>h</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>d</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">]</mo></mrow>
<mo stretchy="false">+</mo>
<munder><mo displaystyle='true' largeop='true'>&#x02211;</mo>
<mrow><mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">&#x02208;</mo>
<mi mathvariant='italic'>G</mi>
</mrow>
</munder>
<munderover><mo displaystyle='true' largeop='true'>&#x02211;</mo>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
</mrow>
<mn>5</mn>
</munderover>
<mi mathvariant='italic'>H</mi>
<mrow><mo stretchy="true">[</mo><mrow><msubsup><mi mathvariant='italic'>P</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mi mathvariant='italic'>q</mi>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='normal'>&#x003C3;</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>p</mi>
</mrow>
</msubsup>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msubsup><mi mathvariant='italic'>h</mi>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
</mrow>
<mrow><mi mathvariant='italic'>q</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>p</mi>
</mrow>
</msubsup>
</mrow><mo stretchy="true">]</mo></mrow>
</mtd></mtr><mtr><mtd columnalign="right" >
</mtd><mtd columnalign="center" >
<mo stretchy="false">+</mo>
</mtd><mtd columnalign="left" >
<munderover><mo displaystyle='true' largeop='true'>&#x02211;</mo>
<mrow><mo stretchy="false">&#x02113;</mo>
<mo stretchy="false">=</mo>
<mn>1</mn>
</mrow>
<mi mathvariant='italic'>L</mi>
</munderover>
<mi mathvariant='italic'>H</mi>
<mrow><mo stretchy="true">[</mo><mrow><msub><mi mathvariant='italic'>R</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">,</mo>
<mi mathvariant='normal'>&#x003B2;</mi>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msub><mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<msub><mi mathvariant='italic'>h</mi>
<mo stretchy="false">&#x02113;</mo>
</msub>
</mrow><mo stretchy="true">]</mo></mrow>
</mtd></mtr></mtable>
</mrow></math>

<br/>
<b><a name="MAP Optimization.Problem" id="MAP Optimization.Problem">Problem</a></b>
<br/>
The return 
<a href="optimize.xml#sfun_out.estimate" target="_top"><span style='white-space: nowrap'>estimate</span></a>
 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
</mrow></math>

 and
<a href="optimize.xml#effect_out" target="_top"><span style='white-space: nowrap'>effect_out</span></a>
 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003B2;</mi>
</mrow></math>

 are approximate
solutions of the MAP estimate problem

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="right" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>minimize</mi>
</mstyle></mrow>
</mtd><mtd columnalign="left" >
<mi mathvariant='italic'>f</mi>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">,</mo>
<mi mathvariant='normal'>&#x003B2;</mi>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>w</mi>
<mo stretchy="false">.</mo>
<mi mathvariant='normal'>r</mi>
<mo stretchy="false">.</mo>
<mi mathvariant='normal'>t</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">,</mo>
<mi mathvariant='normal'>&#x003B2;</mi>
<mo stretchy="false">)</mo>
</mtd></mtr><mtr><mtd columnalign="right" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>subject</mi>
<mspace width='.3em'/>
<mi mathvariant='normal'>to</mi>
</mstyle></mrow>
</mtd><mtd columnalign="left" >
<msubsup><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
<mi mathvariant='italic'>l</mi>
</msubsup>
<mo stretchy="false">&#x02264;</mo>
<msub><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
</msub>
<mo stretchy="false">&#x02264;</mo>
<msubsup><mi mathvariant='italic'>s</mi>
<mi mathvariant='italic'>G</mi>
<mi mathvariant='italic'>u</mi>
</msubsup>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>and</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<msup><mi mathvariant='normal'>&#x003B2;</mi>
<mi mathvariant='italic'>l</mi>
</msup>
<mo stretchy="false">&#x02264;</mo>
<mi mathvariant='normal'>&#x003B2;</mi>
<mo stretchy="false">&#x02264;</mo>
<msup><mi mathvariant='normal'>&#x003B2;</mi>
<mi mathvariant='italic'>u</mi>
</msup>
</mtd></mtr></mtable>
</mrow></math>

The optimization is done with respect to the re-scaled variables

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mover accent='false'><mrow><mi mathvariant='italic'>s</mi>
</mrow>
<mo stretchy='false'>&#x000AF;</mo></mover>
<mi mathvariant='italic'>G</mi>
</msub>
</mrow></math>

; see
<a href="optimize.xml#sfun_in.optimize_zeta" target="_top"><span style='white-space: nowrap'>optimize_zeta</span></a>
.



<br/>
<br/>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br/>
The file <a href="optimize_xam.cpp.xml" target="_top"><span style='white-space: nowrap'>optimize_xam.cpp</span></a>
 contains an example and test
of <code><font color="blue">optimize</font></code>.
It returns true if <code><font color="blue">optimize</font></code> passes the test
and false if it fails.
The file <a href="dismoditis.cpp.xml" target="_top"><span style='white-space: nowrap'>dismoditis.cpp</span></a>
 is another example and test
of <code><font color="blue">optimize</font></code>.


<hr/>Input File: cpp/dismod_pde/optimize.hpp

</body>
</html>
