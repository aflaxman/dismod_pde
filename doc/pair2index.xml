<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Convert Between Age-Cohort Pairs and a Single Grid Index</title>
<meta name="description" id="description" content="Convert Between Age-Cohort Pairs and a Single Grid Index"/>
<meta name="keywords" id="keywords" content=" grid convert pair index age-cohort age cohort time min max grid.age grid.cohort grid.time_lower grid.time_upper grid.size notation kappa(j l) u) valid age_index cohort_index grid_pack pack age_unpack unpack cohort_unpack grid_index to "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_pair2index_xml.js'>
</script>
</head>
<body>
<table><tr>
<td><a href="create_grid.xml" target="_top">Prev</a>
</td><td><a href="pair2index.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>dismod_pde</option>
<option>cpp</option>
<option>pair2index</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>dismod_pde-&gt;</option>
<option>whats_new</option>
<option>install</option>
<option>csv</option>
<option>cpp</option>
<option>example</option>
<option>wish_list</option>
<option>bug_list</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>cpp-&gt;</option>
<option>optimize</option>
<option>create_grid</option>
<option>pair2index</option>
<option>csv_read</option>
<option>str_char_vec</option>
<option>atof_char_vec</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>pair2index-&gt;</option>
<option>pair2index.cpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>age</option>
<option>cohort</option>
<option>time_lower</option>
<option>time_upper</option>
<option>pair2index</option>
<option>grid.age</option>
<option>grid.cohort</option>
<option>grid.time_lower</option>
<option>grid.time_upper</option>
<option>grid.size</option>
<option>Notation</option>
<option>---..kappa</option>
<option>---..Computational Grid</option>
<option>age_index</option>
<option>cohort_index</option>
<option>valid</option>
<option>grid_pack</option>
<option>age_unpack</option>
<option>cohort_unpack</option>
<option>grid_index</option>
<option>Example</option>
</select>
</td>
</tr></table><br/>






<center><b><big><big>Convert Between Age-Cohort Pairs and a Single Grid Index</big></big></b></center>
<br/>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br/>

<code><font color="blue"><span style='white-space: nowrap'>dismod_pde::pair2index&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i></code>


<code><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>age</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>time_lower</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>time_upper</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<code><font color="blue"><span style='white-space: nowrap'><br/>
</span></font><i><font color="black"><span style='white-space: nowrap'>a</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>.age()<br/>
</span></font><i><font color="black"><span style='white-space: nowrap'>c</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>.cohort()<br/>
</span></font><i><font color="black"><span style='white-space: nowrap'>lower</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>.time_lower()<br/>
</span></font><i><font color="black"><span style='white-space: nowrap'>upper</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>.time_lower()<br/>
</span></font><i><font color="black"><span style='white-space: nowrap'>n_grid</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()<br/>
</span></font><i><font color="black"><span style='white-space: nowrap'>valid</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>.pack(</span></font><i><font color="black"><span style='white-space: nowrap'>age_index</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort_index</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_pack</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i><font color="blue"><span style='white-space: nowrap'>.unpack(</span></font><i><font color="black"><span style='white-space: nowrap'>age_unpack</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort_unpack</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>
<br/>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br/>
The stochastic differential equations in dismod_pde 
naturally expressed on a age-cohort grid
(and that is how the computation is done).
On the other hand, the user is interested in computing the
stochastic function values in a rectangular region in age and time.
The <code><font color="blue">pair2index</font></code> routines aid in computing the correspondence
between age-cohort pairs to a unique single grid index.

<br/>
<br/>
<b><big><a name="age" id="age">age</a></big></b>

<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>age</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::vector&lt;double&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>age</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It specifies the grid of age values.
We use 
<code><i><font color="black"><span style='white-space: nowrap'>n_age</span></font></i></code>
 to denote 
<code><i><font color="black"><span style='white-space: nowrap'>age</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()</span></font></code>
 which
must be greater than or equal two.
The vector 
<code><i><font color="black"><span style='white-space: nowrap'>age</span></font></i></code>
 and must be strictly monotone increasing; i.e.,

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>for</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;1&#xA0;,</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>n_age</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;-&#xA0;1,&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>age</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;-&#xA0;1]&#xA0;&lt;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>age</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>]<br/>
</span></font></code>
<br/>
<b><big><a name="cohort" id="cohort">cohort</a></big></b>

<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::vector&lt;double&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It specifies the grid of cohort values.
We use 
<code><i><font color="black"><span style='white-space: nowrap'>n_cohort</span></font></i></code>
 to denote 
<code><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()</span></font></code>

which must be greater than or equal two.
The vector 
<code><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i></code>
 must be strictly monotone increasing; i.e.,

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>for</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;1&#xA0;,</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>n_cohort</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;-&#xA0;1,&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;-&#xA0;1]&#xA0;&lt;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]<br/>
</span></font></code>
The cohort grid must start at a low enough value so that

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i><font color="blue"><span style='white-space: nowrap'>[0]&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>age</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>n_age</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;-&#xA0;1]&#xA0;&lt;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>time_lower</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
The cohort grid must end at a high enough value so that

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>time_upper</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&lt;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>n_cohort</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;-&#xA0;1]&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>age</span></font></i><font color="blue"><span style='white-space: nowrap'>[0]<br/>
</span></font></code>
<br/>
<b><big><a name="time_lower" id="time_lower">time_lower</a></big></b>


<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>time_lower</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>time_lower</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It specifies the lower time limit for the time values that must be 
surrounded by the valid age-cohort grid pairs.

<br/>
<br/>
<b><big><a name="time_upper" id="time_upper">time_upper</a></big></b>


<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>time_upper</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>time_upper</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It specifies the upper time limit for the time values that must be 
surrounded by the valid age-cohort grid pairs.
Furthermore, 
<code><i><font color="black"><span style='white-space: nowrap'>time_upper</span></font></i></code>
 must satisfy

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>time_lower</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&lt;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>time_upper</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
<br/>
<b><big><a name="pair2index" id="pair2index">pair2index</a></big></b>
<br/>
Constructs a <code><font color="blue">pair2index</font></code> object called 
<code><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i></code>
.



<br/>
<br/>
<b><big><a name="grid.age" id="grid.age">grid.age</a></big></b>

<br/>
The return value for this function has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::vector&lt;double&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>a</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It is a copy of the 
<code><i><font color="black"><span style='white-space: nowrap'>age</span></font></i></code>
 vector used to construct 
<code><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i></code>
.  

<br/>
<br/>
<b><big><a name="grid.cohort" id="grid.cohort">grid.cohort</a></big></b>

<br/>
The return value for this function has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::vector&lt;double&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>c</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It is a copy of the 
<code><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i></code>
 vector used to construct 
<code><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i></code>
.

<br/>
<br/>
<b><big><a name="grid.time_lower" id="grid.time_lower">grid.time_lower</a></big></b>

<br/>
The return value for this function has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>lower</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It is a copy of the 
<code><i><font color="black"><span style='white-space: nowrap'>time_lower</span></font></i></code>
 value used to construct 
<code><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i></code>
.

<br/>
<br/>
<b><big><a name="grid.time_upper" id="grid.time_upper">grid.time_upper</a></big></b>

<br/>
The return value for this function has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>upper</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It is a copy of the 
<code><i><font color="black"><span style='white-space: nowrap'>time_upper</span></font></i></code>
 value used to construct 
<code><i><font color="black"><span style='white-space: nowrap'>grid</span></font></i></code>
.

<br/>
<br/>
<b><big><a name="grid.size" id="grid.size">grid.size</a></big></b>

<br/>
The return value of this function has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>n_grid</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
Its value is the number of valid grid pairs
which is also equal to the number if single grid index values.



<br/>
<br/>
<b><big><a name="Notation" id="Notation">Notation</a></big></b>


<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>J</mi>
</mrow></math>

 to denote 
<code><i><font color="black"><span style='white-space: nowrap'>n_age</span></font></i></code>
,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>K</mi>
</mrow></math>

 to denote 
<code><i><font color="black"><span style='white-space: nowrap'>n_cohort</span></font></i></code>
,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>t</mi>
<mi mathvariant='italic'>l</mi>
</msub>
</mrow></math>

 to denote 
<code><i><font color="black"><span style='white-space: nowrap'>time_lower</span></font></i></code>
, and

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>t</mi>
<mi mathvariant='italic'>u</mi>
</msub>
</mrow></math>

 to denote 
<code><i><font color="black"><span style='white-space: nowrap'>time_upper</span></font></i></code>
,
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mn>0</mn>
<mo stretchy="false">=</mo>
<mn>1</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>J</mi>
<mn>-1</mn>
</mrow></math>

, 
we use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>a</mi>
<mi mathvariant='italic'>j</mi>
</msub>
</mrow></math>

 to denote 
<code><i><font color="black"><span style='white-space: nowrap'>age</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
.
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>K</mi>
<mn>-1</mn>
</mrow></math>

, 
we use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>c</mi>
<mi mathvariant='italic'>k</mi>
</msub>
</mrow></math>

 to denote 
<code><i><font color="black"><span style='white-space: nowrap'>cohort</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
.

<br/>
<br/>
<b><a name="Notation.kappa" id="Notation.kappa">kappa</a></b>


<br/>
For 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>J</mi>
<mn>-1</mn>
</mrow></math>

, we define

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="right" >
<mi mathvariant='normal'>&#x003BA;</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>l</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<mi>max</mi>
<mo stretchy="false">{</mo>
<mi mathvariant='italic'>k</mi>
<mspace width='.3em'/>
<mo stretchy="false">:</mo>
<mspace width='.3em'/>
<mn>0</mn>
<mo stretchy="false">&#x02264;</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">&lt;</mo>
<mi mathvariant='italic'>K</mi>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>and</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<msub><mi mathvariant='italic'>c</mi>
<mi mathvariant='italic'>k</mi>
</msub>
<mo stretchy="false">+</mo>
<msub><mi mathvariant='italic'>a</mi>
<mi mathvariant='italic'>j</mi>
</msub>
<mo stretchy="false">&#x02264;</mo>
<msub><mi mathvariant='italic'>t</mi>
<mi mathvariant='italic'>l</mi>
</msub>
<mo stretchy="false">}</mo>
</mtd></mtr><mtr><mtd columnalign="right" >
<mi mathvariant='normal'>&#x003BA;</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<mi>min</mi>
<mo stretchy="false">{</mo>
<mi mathvariant='italic'>k</mi>
<mspace width='.3em'/>
<mo stretchy="false">:</mo>
<mspace width='.3em'/>
<mn>0</mn>
<mo stretchy="false">&#x02264;</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">&lt;</mo>
<mi mathvariant='italic'>K</mi>
<mspace width='.3em'/>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>and</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<msub><mi mathvariant='italic'>c</mi>
<mi mathvariant='italic'>k</mi>
</msub>
<mo stretchy="false">+</mo>
<msub><mi mathvariant='italic'>a</mi>
<mn>1</mn>
</msub>
<mo stretchy="false">&#x02265;</mo>
<msub><mi mathvariant='italic'>t</mi>
<mi mathvariant='italic'>u</mi>
</msub>
<mo stretchy="false">}</mo>
</mtd></mtr></mtable>
</mrow></math>

It follows from the assumptions on the 
<a href="pair2index.xml#age" target="_top"><span style='white-space: nowrap'>age</span></a>
 and 
<a href="pair2index.xml#cohort" target="_top"><span style='white-space: nowrap'>cohort</span></a>
 vectors that
the sets corresponding to the maximums above are non-empty.

<br/>
<br/>
<b><a name="Notation.Computational Grid" id="Notation.Computational Grid">Computational Grid</a></b>


<br/>
The set of valid grid pairs (the computational grid) is


<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mi mathvariant='italic'>G</mi>
<mo stretchy="false">=</mo>
<munderover><mo displaystyle='true' largeop='true'>&#x022C3;</mo>
<mrow><mi mathvariant='italic'>j</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
</mrow>
<mrow><mi mathvariant='italic'>J</mi>
<mn>-1</mn>
</mrow>
</munderover>
<munderover><mo displaystyle='true' largeop='true'>&#x022C3;</mo>
<mrow><mi mathvariant='italic'>k</mi>
<mo stretchy="false">=</mo>
<mi mathvariant='normal'>&#x003BA;</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>l</mi>
<mo stretchy="false">)</mo>
</mrow>
<mrow><mi mathvariant='normal'>&#x003BA;</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">)</mo>
</mrow>
</munderover>
<mo stretchy="false">{</mo>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">}</mo>
</mrow></math>

<br/>
<b><big><a name="age_index" id="age_index">age_index</a></big></b>

<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>age_index</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>age_index</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It specifies an age index (
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>j</mi>
</mrow></math>

 above).

<br/>
<br/>
<b><big><a name="cohort_index" id="cohort_index">cohort_index</a></big></b>

<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>cohort_index</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort_index</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It specifies a cohort index (
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>k</mi>
</mrow></math>

 above).

<br/>
<br/>
<b><big><a name="valid" id="valid">valid</a></big></b>



<br/>
The return value 
<code><i><font color="black"><span style='white-space: nowrap'>valid</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;bool&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>valid</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
The age-cohort pair 
<code><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>age_index</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort_index</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>
 is 
in the computational grid (defined above) if and only if

<code><i><font color="black"><span style='white-space: nowrap'>valid</span></font></i></code>
 is true.

<br/>
<br/>
<b><big><a name="grid_pack" id="grid_pack">grid_pack</a></big></b>


<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>grid_pack</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_pack</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
Its input value does not matter.
If 
<code><i><font color="black"><span style='white-space: nowrap'>valid</span></font></i></code>
 is true,
the return value of 
<code><i><font color="black"><span style='white-space: nowrap'>grid_pack</span></font></i></code>
 is the single index 
corresponding to the specified grid pair,

<code><i><font color="black"><span style='white-space: nowrap'>grid_pack</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&lt;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>n_grid</span></font></i></code>
.
The single index is different for every valid grid pair.
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>If 
<code><i><font color="black"><span style='white-space: nowrap'>valid</span></font></i></code>
 is false,
the return value of 
<code><i><font color="black"><span style='white-space: nowrap'>grid_pack</span></font></i></code>
 is not specified.




<br/>
<br/>
<b><big><a name="age_unpack" id="age_unpack">age_unpack</a></big></b>


<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>age_unpack</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>age_unpack</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
Its input value does not matter.
Upon return, it is the age index corresponding to 
<code><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i></code>
,

<code><i><font color="black"><span style='white-space: nowrap'>age_unpack</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&lt;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>n_age</span></font></i></code>
.

<br/>
<br/>
<b><big><a name="cohort_unpack" id="cohort_unpack">cohort_unpack</a></big></b>


<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>cohort_unpack</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>cohort_unpack</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It input value does not matter.
Upon return, it is the cohort index corresponding to 
<code><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i></code>
,

<code><i><font color="black"><span style='white-space: nowrap'>cohort_unpack</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&lt;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>n_cohort</span></font></i></code>
.

<br/>
<br/>
<b><big><a name="grid_index" id="grid_index">grid_index</a></big></b>

<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>grid_index</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
it is a single index that is a packed version of a valid age-cohort grid pair
and hence must be less that 
<code><i><font color="black"><span style='white-space: nowrap'>n_grid</span></font></i></code>
.


<br/>
<br/>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br/>
The file <a href="pair2index.cpp.xml" target="_top"><span style='white-space: nowrap'>pair2index.cpp</span></a>
 
contains an example and test of <code><font color="blue">pair2index</font></code>.
It returns true if <code><font color="blue">pair2index</font></code> passes the test and false
otherwise.


<hr/>Input File: cpp/dismod_pde/pair2index.hpp

</body>
</html>
