<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Convert a Sub-vector of a Character Vector to Double</title>
<meta name="description" id="description" content="Convert a Sub-vector of a Character Vector to Double"/>
<meta name="keywords" id="keywords" content=" "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_atof_char_vec_xml.js'>
</script>
</head>
<body>
<table><tr>
<td><a href="str_char_vec_tst.cpp.xml" target="_top">Prev</a>
</td><td><a href="atof_char_vec_tst.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>dismod_pde</option>
<option>cpp</option>
<option>atof_char_vec</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>dismod_pde-&gt;</option>
<option>whats_new</option>
<option>install</option>
<option>csv</option>
<option>cpp</option>
<option>example</option>
<option>wish_list</option>
<option>bug_list</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>cpp-&gt;</option>
<option>optimize</option>
<option>create_grid</option>
<option>pair2index</option>
<option>csv_read</option>
<option>str_char_vec</option>
<option>atof_char_vec</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>atof_char_vec-&gt;</option>
<option>atof_char_vec_tst.cpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>char_vec</option>
<option>sub_vec</option>
<option>line</option>
<option>file</option>
<option>dbl</option>
<option>nan</option>
<option>inf</option>
<option>Example</option>
</select>
</td>
</tr></table><br/>



<center><b><big><big>Convert a Sub-vector of a Character Vector to Double</big></big></b></center>
<br/>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br/>

<code><i><font color="black"><span style='white-space: nowrap'>dbl</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;atof_char_vec(</span></font><i><font color="black"><span style='white-space: nowrap'>char_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sub_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>line</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>file</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>



<br/>
<br/>
<b><big><a name="char_vec" id="char_vec">char_vec</a></big></b>
<br/>
this argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;dismod_pde::vector&lt;char&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>char_vec</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It is a character vector containing this value (and possibly other values).


<br/>
<br/>
<b><big><a name="sub_vec" id="sub_vec">sub_vec</a></big></b>
<br/>
this argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;std::pair&lt;size_t,&#xA0;size_t&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sub_vec</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
The first character in the ascii representation is

<code><i><font color="black"><span style='white-space: nowrap'>char_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>sub_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>.first&#xA0;]</span></font></code>
.
The number of character in the ascii representation is

<code><i><font color="black"><span style='white-space: nowrap'>sub_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>.second</span></font></code>
.
This number of characters must be less than 100.

<br/>
<br/>
<b><big><a name="line" id="line">line</a></big></b>
<br/>
this argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>line</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
Is the line number corresponding to this value
(used for error reporting).

<br/>
<br/>
<b><big><a name="file" id="file">file</a></big></b>
<br/>
this argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;std::string&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>file</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
Is the file that this data was read from
(used for error reporting).

<br/>
<br/>
<b><big><a name="dbl" id="dbl">dbl</a></big></b>
<br/>
the return value has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>dbl</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
and is the double precision value corresponding to 
the ascii representation mentioned below 
<a href="atof_char_vec.xml#sub_vec" target="_top"><span style='white-space: nowrap'>sub_vec</span></a>
.

<br/>
<br/>
<b><big><a name="nan" id="nan">nan</a></big></b>
<br/>
If the ascii representation is <code><font color="blue">nan</font></code>,
double precision value <code><font color="blue">dbl</font></code> is also nan.

<br/>
<br/>
<b><big><a name="inf" id="inf">inf</a></big></b>
<br/>
If the ascii representation is <code><font color="blue">inf</font></code> (<code><font color="blue">-inf</font></code>),
double precision value 
<code><i><font color="black"><span style='white-space: nowrap'>dbl</span></font></i></code>
 is 
<code><font color="blue">DISMOD4_PLUS_INFINITY</font></code> ( <code><font color="blue">DISMOD4_PLUS_INFINITY</font></code> ).



<br/>
<br/>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br/>
The file <a href="atof_char_vec_tst.cpp.xml" target="_top"><span style='white-space: nowrap'>atof_char_vec_tst.cpp</span></a>
 contains
and example and test of <code><font color="blue">atof_char_vec</font></code>.
It returns true for success and false for failure.

<hr/>Input File: cpp/dismod_pde/atof_char_vec.hpp

</body>
</html>
